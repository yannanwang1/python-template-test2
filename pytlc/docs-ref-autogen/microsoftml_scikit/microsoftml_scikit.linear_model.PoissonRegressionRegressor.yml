### YamlMime:UniversalReference
api_name: []
items:
- children:
  - microsoftml_scikit.linear_model.PoissonRegressionRegressor.get_params
  class: microsoftml_scikit.linear_model.PoissonRegressionRegressor
  fullName: microsoftml_scikit.linear_model.PoissonRegressionRegressor
  inheritance:
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: microsoftml_scikit.internal.core.base_pipeline_item.BasePipelineItem
    - inheritance:
      - inheritance:
        - inheritance:
          - type: builtins.object
          type: microsoftml_scikit.internal.core.base_pipeline_item.BaseSignature
        type: microsoftml_scikit.internal.core.base_pipeline_item.DefaultSignature
      type: microsoftml_scikit.internal.core.base_pipeline_item.DefaultSignatureWithRoles
    type: microsoftml_scikit.internal.core.linear_model._poissonregressionregressor.PoissonRegressionRegressor
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: sklearn.base.BaseEstimator
    - inheritance:
      - type: builtins.object
      type: microsoftml_scikit.internal.core.base_pipeline_item.BasePipelineItem
    type: microsoftml_scikit.base_predictor.BasePredictor
  - inheritance:
    - type: builtins.object
    type: sklearn.base.RegressorMixin
  langs:
  - python
  module: microsoftml_scikit.linear_model
  name: PoissonRegressionRegressor
  source:
    id: PoissonRegressionRegressor
    path: microsoftml_scikit\linear_model\_poissonregressionregressor.py
    remote:
      branch: HEAD
      path: microsoftml_scikit\linear_model\_poissonregressionregressor.py
      repo: https://apidrop.visualstudio.com/Content%20CI/_git/ReferenceAutomation
    startLine: 20
  summary: "\n**Description**\n\n   Train an Poisson regression model.\n\n**Details**\n\
    \n   [Poisson regression](https://en.wikipedia.org/wiki/Poisson_regression) is\
    \ a parameterized\n   regression method. It assumes that the log of the conditional\
    \ mean of the dependent variable follows a linear function of\n   the dependent\
    \ variables. Assuming that the dependent variable follows a Poisson distribution,\n\
    \   the parameters of the regressor can be estimated by maximizing the likelihood\
    \ of the obtained observations.\n\n**See Also**\n\n   @microsoftml_scikit.linear_model.FastLinearRegressor,\n\
    \   @microsoftml_scikit.linear_model.OrdinaryLeastSquaresRegressor,\n   @microsoftml_scikit.ensemble.LightGbmRegressor,\n\
    \   @microsoftml_scikit.ensemble.FastForestRegressor,\n   @microsoftml_scikit.ensemble.FastTreesRegressor,\n\
    \   @microsoftml_scikit.ensemble.GamRegressor.\n\n**Reference**\n\n   [Poisson\
    \ regression](https://en.wikipedia.org/wiki/Poisson_regression)\n\n\n\n-[ Example\
    \ ]-\n\n\n"
  syntax:
    content: PoissonRegressionRegressor(normalize='Auto', caching='Auto', l2_weight=1.0,
      l1_weight=1.0, opt_tol=1e-07, memory_size=20, enforce_non_negativity=False,
      init_wts_diameter=0.0, max_iterations=2147483647, sgd_init_tol=0.0, quiet=False,
      use_threads=True, train_threads=None, dense_optimizer=False, feature=None, label=None,
      weight=None, **params)
    parameters:
    - description: 'see *l-pipeline-syntax*.

        '
      id: feature
    - description: 'see *l-pipeline-syntax*.

        '
      id: label
    - description: 'see *l-pipeline-syntax*.

        '
      id: weight
    - description: "Specifies the type of automatic normalization used:\n\n* `\"Auto\"\
        `: if normalization is needed, it is performed automatically. This is the\
        \ default choice. \n\n* `\"No\"`: no normalization is performed. \n\n* `\"\
        Yes\"`: normalization is performed. \n\n* `\"Warn\"`: if normalization is\
        \ needed, a warning message is displayed, but normalization is not performed.\
        \ \n\nNormalization rescales disparate data ranges to a standard scale. Feature\n\
        scaling insures the distances between data points are proportional and\nenables\
        \ various optimization methods such as gradient descent to converge\nmuch\
        \ faster. If normalization is performed, a `MaxMin` normalizer is\nused. It\
        \ normalizes values in an interval [a, b] where `-1 <= a <= 0`\nand `0 <=\
        \ b <= 1` and `b - a = 1`. This normalizer preserves\nsparsity by mapping\
        \ zero to zero.\n"
      id: normalize
    - description: 'Whether learner should cache input training data.

        '
      id: caching
    - description: 'L2 regularization weight.

        '
      id: l2_weight
    - description: 'L1 regularization weight.

        '
      id: l1_weight
    - description: 'Tolerance parameter for optimization convergence. Lower = slower,
        more accurate.

        '
      id: opt_tol
    - description: 'Memory size for L-BFGS. Lower=faster, less accurate. The technique
        used for optimization here is

        L-BFGS, which uses only a limited amount of memory to compute the next step
        direction. This parameter indicates the

        number of past positions and gradients to store for the computation of the
        next step. Must be greater than or equal

        to `1`.

        '
      id: memory_size
    - description: 'Enforce non-negative weights. This flag, however, does not put
        any constraint on the bias

        term; that is, the bias term can be still a negtaive number.

        '
      id: enforce_non_negativity
    - description: 'Sets the initial weights diameter that specifies the range from
        which values are drawn for the

        initial weights. These weights are initialized randomly from within this range.
        For example, if the diameter is

        specified to be `d`, then the weights are uniformly distributed between `-d/2`
        and `d/2`. The default value is

        `0`, which specifies that all the  weights are set to zero.

        '
      id: init_wts_diameter
    - description: 'Maximum iterations.

        '
      id: max_iterations
    - description: 'Run SGD to initialize LR weights, converging to this tolerance.

        '
      id: sgd_init_tol
    - description: 'If set to true, produce no output during training.

        '
      id: quiet
    - description: 'Whether or not to use threads. Default is true.

        '
      id: use_threads
    - description: 'Number of threads.

        '
      id: train_threads
    - description: 'If `True`, forces densification of the internal optimization vectors.
        If `False`, enables

        the logistic regression optimizer use sparse or dense internal states as it
        finds appropriate. Setting

        `denseOptimizer` to `True` requires the internal optimizer to use a dense
        internal state, which may help

        alleviate load on the garbage collector for some varieties of larger problems.

        '
      id: dense_optimizer
    - description: 'Additional arguments sent to compute engine.

        '
      id: params
  type: class
  uid: microsoftml_scikit.linear_model.PoissonRegressionRegressor
- class: microsoftml_scikit.linear_model.PoissonRegressionRegressor
  fullName: microsoftml_scikit.linear_model.PoissonRegressionRegressor.get_params
  langs:
  - python
  module: microsoftml_scikit.linear_model
  name: get_params
  source:
    id: get_params
    path: microsoftml_scikit\linear_model\_poissonregressionregressor.py
    remote:
      branch: HEAD
      path: microsoftml_scikit\linear_model\_poissonregressionregressor.py
      repo: https://apidrop.visualstudio.com/Content%20CI/_git/ReferenceAutomation
    startLine: 168
  summary: 'Get the parameters for this operator.

    '
  syntax:
    content: get_params(deep=False)
    parameters:
    - defaultValue: 'False'
      id: deep
  type: method
  uid: microsoftml_scikit.linear_model.PoissonRegressionRegressor.get_params
references:
- fullName: microsoftml_scikit.linear_model.PoissonRegressionRegressor.get_params
  isExternal: false
  name: get_params
  parent: microsoftml_scikit.linear_model.PoissonRegressionRegressor
  uid: microsoftml_scikit.linear_model.PoissonRegressionRegressor.get_params
