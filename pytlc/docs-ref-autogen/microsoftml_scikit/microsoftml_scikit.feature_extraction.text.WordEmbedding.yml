### YamlMime:UniversalReference
api_name: []
items:
- children:
  - microsoftml_scikit.feature_extraction.text.WordEmbedding.get_params
  class: microsoftml_scikit.feature_extraction.text.WordEmbedding
  fullName: microsoftml_scikit.feature_extraction.text.WordEmbedding
  inheritance:
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: microsoftml_scikit.internal.core.base_pipeline_item.BasePipelineItem
    - inheritance:
      - inheritance:
        - type: builtins.object
        type: microsoftml_scikit.internal.core.base_pipeline_item.BaseSignature
      type: microsoftml_scikit.internal.core.base_pipeline_item.DefaultSignature
    type: microsoftml_scikit.internal.core.feature_extraction.text._wordembedding.WordEmbedding
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: sklearn.base.BaseEstimator
    - inheritance:
      - type: builtins.object
      type: microsoftml_scikit.internal.core.base_pipeline_item.BasePipelineItem
    type: microsoftml_scikit.base_transform.BaseTransform
  - inheritance:
    - type: builtins.object
    type: sklearn.base.TransformerMixin
  langs:
  - python
  module: microsoftml_scikit.feature_extraction.text
  name: WordEmbedding
  source:
    id: WordEmbedding
    path: microsoftml_scikit\feature_extraction\text\_wordembedding.py
    remote:
      branch: HEAD
      path: microsoftml_scikit\feature_extraction\text\_wordembedding.py
      repo: https://apidrop.visualstudio.com/Content%20CI/_git/ReferenceAutomation
    startLine: 20
  summary: "\n**Description**\n\n   Word Embeddings transform is a text featurizer\
    \ which converts vectors of text tokens into sentence vectors using a pre-trained\
    \ model.\n\n**Details**\n\n   WordEmbeddings wrap different embedding models,\
    \ such as @microsoftml_scikit.feature_extraction.text.SsweEmbedding. Users can\
    \ specify which embedding to use. The\n   available options are various versions\
    \ of [GloVe Models](https://nlp.stanford.edu/projects/glove/), [FastText](https://en.wikipedia.org/wiki/FastText),\
    \ and [Sswe](http://anthology.aclweb.org/P/P14/P14-1146.pdf).\n\nNote: As `WordEmbedding`\
    \ requires a column with text vector, e.g. <'This', 'is', 'good'>, users need\
    \ to create an input column by: \n\n  * concatenating columns with TX type, \n\
    \n  * or using the `output_tokens=True` for `NGramFeaturizer()` to convert a column\
    \ with sentences like \"This is good\" into <'This', 'is', 'good'>. The column\
    \ for the output token column is renamed with a prefix of '_TranformedText'. \n\
    \n  In the following example, after the `NGramFeaturizer`, features named *ngram.__*\
    \ are generated.\n  A new column named *ngram_TransformedText* is also created\
    \ with the text vector, similar as running `.split(' ')`.\n  However, due to the\
    \ variable length of this column it cannot be properly converted to pandas dataframe,\n\
    \  thus any pipelines/transforms output this text vector column will throw errors.\
    \ However, we use *ngram_TransformedText* as the input to `WordEmbedding`, the\n\
    \  *ngram_TransformedText* column will be overwritten by the output from `WordEmbedding`.\
    \ The output from `WordEmbedding` is named *ngram_TransformedText.__*\n\n**See\
    \ Also**\n\n   @microsoftml_scikit.feature_extraction.text.NGramFeaturizer,\n\
    \   @microsoftml_scikit.feature_extraction.text.DssmFeaturizer,\n   @microsoftml_scikit.feature_extraction.text.Sentiment,\n\
    \   @microsoftml_scikit.feature_extraction.text.SsweEmbedding.\n\n\n\n-[ Example\
    \ ]-\n\n\n"
  syntax:
    content: WordEmbedding(model_kind='Sswe', custom_lookup_table=None, columns=None,
      **params)
    parameters:
    - description: "a dictionary of key-value pairs, where key is the output column\
        \ name and value is the input column name.\n\n* Only one key-value pair is\
        \ allowed. \n\n* Input column type: *VectorType*. \n\n* Output column type:\
        \ *VectorType*. \n\n* If the output column name is same as the input column\
        \ name, then simply specify `columns` as a string. \n\nThe << operator can\
        \ be used to set this value (see :ref:LinkToOperator)\n\nFor example\n   *\
        \ WordEmbedding(columns={'out1':'input1',) \n\n   * WordEmbedding() << {'ou1':\
        \ 'input1'} \n\nFor more details see *l-pipeline-syntax*.\n"
      id: columns
    - description: 'Pre-trained model used to create the vocabulary. Available options
        are: ''GloVe50D'', ''GloVe100D'',

        ''GloVe200D'', ''GloVe300D'', ''GloVeTwitter25D'', ''GloVeTwitter50D'', ''GloVeTwitter100D'',
        ''GloVeTwitter200D'',

        ''FastTextWikipedia300D'', ''Sswe''.

        '
      id: model_kind
    - description: 'Filename for custom word embedding model.

        '
      id: custom_lookup_table
    - description: 'Additional arguments sent to compute engine.

        '
      id: params
  type: class
  uid: microsoftml_scikit.feature_extraction.text.WordEmbedding
- class: microsoftml_scikit.feature_extraction.text.WordEmbedding
  fullName: microsoftml_scikit.feature_extraction.text.WordEmbedding.get_params
  langs:
  - python
  module: microsoftml_scikit.feature_extraction.text
  name: get_params
  source:
    id: get_params
    path: microsoftml_scikit\feature_extraction\text\_wordembedding.py
    remote:
      branch: HEAD
      path: microsoftml_scikit\feature_extraction\text\_wordembedding.py
      repo: https://apidrop.visualstudio.com/Content%20CI/_git/ReferenceAutomation
    startLine: 106
  summary: 'Get the parameters for this operator.

    '
  syntax:
    content: get_params(deep=False)
    parameters:
    - defaultValue: 'False'
      id: deep
  type: method
  uid: microsoftml_scikit.feature_extraction.text.WordEmbedding.get_params
references:
- fullName: microsoftml_scikit.feature_extraction.text.WordEmbedding.get_params
  isExternal: false
  name: get_params
  parent: microsoftml_scikit.feature_extraction.text.WordEmbedding
  uid: microsoftml_scikit.feature_extraction.text.WordEmbedding.get_params
