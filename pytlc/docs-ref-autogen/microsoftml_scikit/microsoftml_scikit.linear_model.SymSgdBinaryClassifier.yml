### YamlMime:UniversalReference
api_name: []
items:
- children:
  - microsoftml_scikit.linear_model.SymSgdBinaryClassifier.decision_function
  - microsoftml_scikit.linear_model.SymSgdBinaryClassifier.get_params
  - microsoftml_scikit.linear_model.SymSgdBinaryClassifier.predict_proba
  class: microsoftml_scikit.linear_model.SymSgdBinaryClassifier
  fullName: microsoftml_scikit.linear_model.SymSgdBinaryClassifier
  inheritance:
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: microsoftml_scikit.internal.core.base_pipeline_item.BasePipelineItem
    - inheritance:
      - inheritance:
        - inheritance:
          - type: builtins.object
          type: microsoftml_scikit.internal.core.base_pipeline_item.BaseSignature
        type: microsoftml_scikit.internal.core.base_pipeline_item.DefaultSignature
      type: microsoftml_scikit.internal.core.base_pipeline_item.DefaultSignatureWithRoles
    type: microsoftml_scikit.internal.core.linear_model._symsgdbinaryclassifier.SymSgdBinaryClassifier
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: sklearn.base.BaseEstimator
    - inheritance:
      - type: builtins.object
      type: microsoftml_scikit.internal.core.base_pipeline_item.BasePipelineItem
    type: microsoftml_scikit.base_predictor.BasePredictor
  - inheritance:
    - type: builtins.object
    type: sklearn.base.ClassifierMixin
  langs:
  - python
  module: microsoftml_scikit.linear_model
  name: SymSgdBinaryClassifier
  source:
    id: SymSgdBinaryClassifier
    path: microsoftml_scikit\linear_model\_symsgdbinaryclassifier.py
    remote:
      branch: HEAD
      path: microsoftml_scikit\linear_model\_symsgdbinaryclassifier.py
      repo: https://apidrop.visualstudio.com/Content%20CI/_git/ReferenceAutomation
    startLine: 20
  summary: "\n**Description**\n   Train an symbolic SGD model.\n\n**Details**\n\n\
    \   Stochastic gradient descent (SGD) is a well known method for regression and\
    \ classification\n   tasks, and is primarily a sequential algorithm. The `SymSgdBinaryClassifier`\
    \ is an\n   implementation of a parallel SGD algorithm that, to a first-order\
    \ approximation, retains the\n   sequential semantics of SGD. Each thread learns\
    \ a local model as well a *model combiner*\n   which allows local models to be\
    \ combined to to produce what a sequential model would have\n   produced.\n\n\
    **See Also**\n\n   @microsoftml_scikit.linear_model.LogisticRegressionBinaryClassifier,\n\
    \   @microsoftml_scikit.linear_model.SgdBinaryClassifier,\n   @microsoftml_scikit.linear_model.FastLinearBinaryClassifier\n\
    \n**Reference**\n\n   [Parallel Stochastic Gradient Descent with Sound Combiners](https://arxiv.org/pdf/1705.08030.pdf)\n\
    \n\n\n-[ Example ]-\n\n\n\n\n"
  syntax:
    content: SymSgdBinaryClassifier(normalize='Auto', caching='Auto', number_of_iterations=50,
      learning_rate=None, l2_regularization=0.0, number_of_threads=None, tol=0.0001,
      update_frequency=None, memory_size=1024, shuffle=True, positive_instance_weight=1.0,
      feature=None, label=None, **params)
    parameters:
    - description: 'see *l-pipeline-syntax*.

        '
      id: feature
    - description: 'see *l-pipeline-syntax*.

        '
      id: label
    - description: "Specifies the type of automatic normalization used:\n\n* `\"Auto\"\
        `: if normalization is needed, it is performed automatically. This is the\
        \ default choice. \n\n* `\"No\"`: no normalization is performed. \n\n* `\"\
        Yes\"`: normalization is performed. \n\n* `\"Warn\"`: if normalization is\
        \ needed, a warning message is displayed, but normalization is not performed.\
        \ \n\nNormalization rescales disparate data ranges to a standard scale. Feature\n\
        scaling insures the distances between data points are proportional and\nenables\
        \ various optimization methods such as gradient descent to converge\nmuch\
        \ faster. If normalization is performed, a `MaxMin` normalizer is\nused. It\
        \ normalizes values in an interval [a, b] where `-1 <= a <= 0`\nand `0 <=\
        \ b <= 1` and `b - a = 1`. This normalizer preserves\nsparsity by mapping\
        \ zero to zero.\n"
      id: normalize
    - description: 'Whether learner should cache input training data.

        '
      id: caching
    - description: 'Number of passes over the data.

        '
      id: number_of_iterations
    - description: 'Learning rate.

        '
      id: learning_rate
    - description: 'L2 regularization.

        '
      id: l2_regularization
    - description: 'Degree of lock-free parallelism. Defaults to automatic depending
        on data sparseness.

        Determinism not guaranteed.

        '
      id: number_of_threads
    - description: 'Tolerance for difference in average loss in consecutive passes.

        '
      id: tol
    - description: 'The number of iterations each thread learns a local model until
        combining it with the global

        model. Low value means more updated global model and high value means less
        cache traffic.

        '
      id: update_frequency
    - description: 'Memory size for L-BFGS. Lower=faster, less accurate. The technique
        used for optimization here is

        L-BFGS, which uses only a limited amount of memory to compute the next step
        direction. This parameter indicates the

        number of past positions and gradients to store for the computation of the
        next step. Must be greater than or equal

        to `1`.

        '
      id: memory_size
    - description: 'Shuffle data?.

        '
      id: shuffle
    - description: 'Apply weight to the positive class, for imbalanced data.

        '
      id: positive_instance_weight
    - description: 'Additional arguments sent to compute engine.

        '
      id: params
  type: class
  uid: microsoftml_scikit.linear_model.SymSgdBinaryClassifier
- class: microsoftml_scikit.linear_model.SymSgdBinaryClassifier
  fullName: microsoftml_scikit.linear_model.SymSgdBinaryClassifier.decision_function
  langs:
  - python
  module: microsoftml_scikit.linear_model
  name: decision_function
  source:
    id: decision_function
    path: microsoftml_scikit\internal\utils\utils.py
    remote:
      branch: HEAD
      path: microsoftml_scikit\internal\utils\utils.py
      repo: https://apidrop.visualstudio.com/Content%20CI/_git/ReferenceAutomation
    startLine: 152
  summary: 'Returns score values

    '
  syntax:
    content: decision_function(X, **params)
  type: method
  uid: microsoftml_scikit.linear_model.SymSgdBinaryClassifier.decision_function
- class: microsoftml_scikit.linear_model.SymSgdBinaryClassifier
  fullName: microsoftml_scikit.linear_model.SymSgdBinaryClassifier.get_params
  langs:
  - python
  module: microsoftml_scikit.linear_model
  name: get_params
  source:
    id: get_params
    path: microsoftml_scikit\linear_model\_symsgdbinaryclassifier.py
    remote:
      branch: HEAD
      path: microsoftml_scikit\linear_model\_symsgdbinaryclassifier.py
      repo: https://apidrop.visualstudio.com/Content%20CI/_git/ReferenceAutomation
    startLine: 159
  summary: 'Get the parameters for this operator.

    '
  syntax:
    content: get_params(deep=False)
    parameters:
    - defaultValue: 'False'
      id: deep
  type: method
  uid: microsoftml_scikit.linear_model.SymSgdBinaryClassifier.get_params
- class: microsoftml_scikit.linear_model.SymSgdBinaryClassifier
  fullName: microsoftml_scikit.linear_model.SymSgdBinaryClassifier.predict_proba
  langs:
  - python
  module: microsoftml_scikit.linear_model
  name: predict_proba
  source:
    id: predict_proba
    path: microsoftml_scikit\internal\utils\utils.py
    remote:
      branch: HEAD
      path: microsoftml_scikit\internal\utils\utils.py
      repo: https://apidrop.visualstudio.com/Content%20CI/_git/ReferenceAutomation
    startLine: 145
  summary: 'Returns probabilities

    '
  syntax:
    content: predict_proba(X, **params)
  type: method
  uid: microsoftml_scikit.linear_model.SymSgdBinaryClassifier.predict_proba
references:
- fullName: microsoftml_scikit.linear_model.SymSgdBinaryClassifier.decision_function
  isExternal: false
  name: decision_function
  parent: microsoftml_scikit.linear_model.SymSgdBinaryClassifier
  uid: microsoftml_scikit.linear_model.SymSgdBinaryClassifier.decision_function
- fullName: microsoftml_scikit.linear_model.SymSgdBinaryClassifier.get_params
  isExternal: false
  name: get_params
  parent: microsoftml_scikit.linear_model.SymSgdBinaryClassifier
  uid: microsoftml_scikit.linear_model.SymSgdBinaryClassifier.get_params
- fullName: microsoftml_scikit.linear_model.SymSgdBinaryClassifier.predict_proba
  isExternal: false
  name: predict_proba
  parent: microsoftml_scikit.linear_model.SymSgdBinaryClassifier
  uid: microsoftml_scikit.linear_model.SymSgdBinaryClassifier.predict_proba
