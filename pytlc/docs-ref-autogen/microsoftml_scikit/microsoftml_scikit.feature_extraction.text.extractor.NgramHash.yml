### YamlMime:UniversalReference
api_name: []
items:
- children:
  - microsoftml_scikit.feature_extraction.text.extractor.NgramHash.get_params
  class: microsoftml_scikit.feature_extraction.text.extractor.NgramHash
  fullName: microsoftml_scikit.feature_extraction.text.extractor.NgramHash
  inheritance:
  - inheritance:
    - inheritance:
      - inheritance:
        - type: builtins.object
        type: builtins.dict
      type: microsoftml_scikit.internal.utils.entrypoints.Component
    type: microsoftml_scikit.internal.core.feature_extraction.text.extractor._ngramhash.NgramHash
  langs:
  - python
  module: microsoftml_scikit.feature_extraction.text.extractor
  name: NgramHash
  source:
    id: NgramHash
    path: microsoftml_scikit\feature_extraction\text\extractor\_ngramhash.py
    remote:
      branch: HEAD
      path: microsoftml_scikit\feature_extraction\text\extractor\_ngramhash.py
      repo: https://apidrop.visualstudio.com/Content%20CI/_git/ReferenceAutomation
    startLine: 18
  summary: "\n**Description**\n\n   Extracts NGrams from text and convert them to\
    \ vector using hashing trick.\n\n**Details**\n\n   The `NGramFeaturizer` transform\
    \ produces a bag of counts of\n   sequences of consecutive words, called n-grams,\
    \ from a given corpus of text.\n   There are two ways it can do this:\n\n   *\
    \ build a dictionary of n-grams and use the id in the dictionary as the index\
    \ in the bag; \n\n   * hash each n-gram and use the hash value as the index in\
    \ the bag. \n\n   This class provide the text extractor that implement the second.\
    \ In @microsoftml_scikit.feature_extraction.text.NGramFeaturizer,\n   users should\
    \ specify which text extractor to use as the argument.\n\n   The purpose of hashing\
    \ is to convert variable-length text documents into\n   equal-length numeric feature\
    \ vectors, to support dimensionality reduction\n   and to make the lookup of feature\
    \ weights faster.\n\n   The n-grams are represented as count vectors, with vector\
    \ slots\n   corresponding to their hashes. Embedding ngrams in\n   a vector space\
    \ allows their contents to be compared in an efficient manner.\n   The slot values\
    \ in the vector can be weighted by the following factors:\n\n   * *term frequency*\
    \ - The number of occurrences of the slot in the text \n\n   * *inverse document\
    \ frequency* - A ratio (the logarithm of inverse relative slot frequency) that\
    \ measures the information a slot provides by determining how common or rare it\
    \ is across the entire text. \n\n   * *term frequency-inverse document frequency*\
    \ - the product term frequency and the inverse document frequency. \n\n**See Also**\n\
    \n   @microsoftml_scikit.feature_extraction.text.NGramFeaturizer,\n   @microsoftml_scikit.feature_extraction.text.extractor.Ngram\n\
    \n\n\n-[ Example ]-\n\n\n"
  syntax:
    content: NgramHash(hash_bits=16, ngram_length=1, skip_length=0, all_lengths=True,
      seed=314489979, ordered=True, invert_hash=0, **params)
    parameters:
    - description: 'Number of bits to hash into. Must be between 1 and 30, inclusive.

        '
      id: hash_bits
    - description: 'Ngram length.

        '
      id: ngram_length
    - description: 'Maximum number of tokens to skip when constructing an ngram.

        '
      id: skip_length
    - description: 'Whether to include all ngram lengths up to ngramLength or only
        ngramLength.

        '
      id: all_lengths
    - description: 'Hashing seed.

        '
      id: seed
    - description: 'Whether the position of each source column should be included
        in the hash (when there are multiple

        source columns).

        '
      id: ordered
    - description: 'Limit the number of keys used to generate the slot name to this
        many. 0 means no invert hashing, -1

        means no limit.

        '
      id: invert_hash
    - description: 'Additional arguments sent to compute engine.

        '
      id: params
  type: class
  uid: microsoftml_scikit.feature_extraction.text.extractor.NgramHash
- class: microsoftml_scikit.feature_extraction.text.extractor.NgramHash
  fullName: microsoftml_scikit.feature_extraction.text.extractor.NgramHash.get_params
  langs:
  - python
  module: microsoftml_scikit.feature_extraction.text.extractor
  name: get_params
  source:
    id: get_params
    path: microsoftml_scikit\feature_extraction\text\extractor\_ngramhash.py
    remote:
      branch: HEAD
      path: microsoftml_scikit\feature_extraction\text\extractor\_ngramhash.py
      repo: https://apidrop.visualstudio.com/Content%20CI/_git/ReferenceAutomation
    startLine: 108
  summary: 'Get the parameters for this operator.

    '
  syntax:
    content: get_params(deep=False)
    parameters:
    - defaultValue: 'False'
      id: deep
  type: method
  uid: microsoftml_scikit.feature_extraction.text.extractor.NgramHash.get_params
references:
- fullName: microsoftml_scikit.feature_extraction.text.extractor.NgramHash.get_params
  isExternal: false
  name: get_params
  parent: microsoftml_scikit.feature_extraction.text.extractor.NgramHash
  uid: microsoftml_scikit.feature_extraction.text.extractor.NgramHash.get_params
