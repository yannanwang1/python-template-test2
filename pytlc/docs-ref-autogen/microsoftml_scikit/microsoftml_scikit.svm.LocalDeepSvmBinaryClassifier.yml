### YamlMime:UniversalReference
api_name: []
items:
- children:
  - microsoftml_scikit.svm.LocalDeepSvmBinaryClassifier.decision_function
  - microsoftml_scikit.svm.LocalDeepSvmBinaryClassifier.get_params
  - microsoftml_scikit.svm.LocalDeepSvmBinaryClassifier.predict_proba
  class: microsoftml_scikit.svm.LocalDeepSvmBinaryClassifier
  fullName: microsoftml_scikit.svm.LocalDeepSvmBinaryClassifier
  inheritance:
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: microsoftml_scikit.internal.core.base_pipeline_item.BasePipelineItem
    - inheritance:
      - inheritance:
        - inheritance:
          - type: builtins.object
          type: microsoftml_scikit.internal.core.base_pipeline_item.BaseSignature
        type: microsoftml_scikit.internal.core.base_pipeline_item.DefaultSignature
      type: microsoftml_scikit.internal.core.base_pipeline_item.DefaultSignatureWithRoles
    type: microsoftml_scikit.internal.core.svm._localdeepsvmbinaryclassifier.LocalDeepSvmBinaryClassifier
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: sklearn.base.BaseEstimator
    - inheritance:
      - type: builtins.object
      type: microsoftml_scikit.internal.core.base_pipeline_item.BasePipelineItem
    type: microsoftml_scikit.base_predictor.BasePredictor
  - inheritance:
    - type: builtins.object
    type: sklearn.base.ClassifierMixin
  langs:
  - python
  module: microsoftml_scikit.svm
  name: LocalDeepSvmBinaryClassifier
  source:
    id: LocalDeepSvmBinaryClassifier
    path: microsoftml_scikit\svm\_localdeepsvmbinaryclassifier.py
    remote:
      branch: HEAD
      path: microsoftml_scikit\svm\_localdeepsvmbinaryclassifier.py
      repo: https://apidrop.visualstudio.com/Content%20CI/_git/ReferenceAutomation
    startLine: 20
  summary: "\n**Description**\n\n   Local Deep Support Vector Machine\n\n**Details**\n\
    \n   LD-SVM learns a binary, non-linear SVM classifier with a kernel that is\n\
    \   specifically designed to reduce prediction time. LD-SVM learns decision\n\
    \   boundaries that are locally linear. This implies that a test point can\n \
    \  be efficiently classified by testing it against its local decision\n   boundary\
    \ rather than the entire set of decision boundaries all over\n   feature space.\
    \ Furthermore, LD-SVM brings down the cost of testing a\n   point against its\
    \ local decision boundary to be logarithmic in the\n   number of training points.\
    \ This implies that LD-SVM is exponentially\n   faster at prediction than traditional\
    \ SVMs, such as the RBF-SVM, which\n   need to compute the kernel over all support\
    \ vectors in order to make a\n   prediction.\n\n   LD-SVM is most useful when\
    \ all the following conditions are met:\n      * You have a binary classification\
    \ problem or you can reduce your \n\n      problem to a set of binary classification\
    \ problems.\n      * Linear classifiers are not performing well\n      * Non-linear\
    \ SVMs or other classifiers yield high classification\n      accuracies but are\
    \ taking too much time for making predictions.\n      * You can afford to sacrifice\
    \ prediction accuracy in order to bring\n      down prediction time.\n\n   LD-SVM\
    \ should not be used in situations where linear classifiers are\n   already giving\
    \ good results or when high classification accuracies can\n   be achieved by adding\
    \ small amounts of non-linearity (such as with a\n   neural network with a small\
    \ number of hidden nodes).\n\n   More details about LD-SVM can be found in this\
    \ paper [Local deep kernel\n   learning for efficient non-linear SVM prediction](http://research.microsoft.com/en-us/um/people/manik/pubs/Jose13.pdf).\n\
    \n**See Also**\n\n   @microsoftml_scikit.linear_model.LogisticRegressionClassifier,\n\
    \   @microsoftml_scikit.linear_model.AveragedPerceptronBinaryClassifier\n\n**Reference**\n\
    \n   [Local deep kernel learning for efficient non-linear SVM prediction](http://research.microsoft.com/en-us/um/people/manik/pubs/Jose13.pdf)\n\
    \n\n\n-[ Example ]-\n\n\n\n\n"
  syntax:
    content: LocalDeepSvmBinaryClassifier(normalize='Auto', caching='Auto', tree_depth=3,
      lambda_w=0.1, lambda_theta=0.01, lambda_thetaprime=0.01, sigma=1.0, num_iterations=15000,
      no_bias=False, feature=None, label=None, **params)
    parameters:
    - description: 'see *l-pipeline-syntax*.

        '
      id: feature
    - description: 'see *l-pipeline-syntax*.

        '
      id: label
    - description: "Specifies the type of automatic normalization used:\n\n* `\"Auto\"\
        `: if normalization is needed, it is performed automatically. This is the\
        \ default choice. \n\n* `\"No\"`: no normalization is performed. \n\n* `\"\
        Yes\"`: normalization is performed. \n\n* `\"Warn\"`: if normalization is\
        \ needed, a warning message is displayed, but normalization is not performed.\
        \ \n\nNormalization rescales disparate data ranges to a standard scale. Feature\n\
        scaling insures the distances between data points are proportional and\nenables\
        \ various optimization methods such as gradient descent to converge\nmuch\
        \ faster. If normalization is performed, a `MaxMin` normalizer is\nused. It\
        \ normalizes values in an interval [a, b] where `-1 <= a <= 0`\nand `0 <=\
        \ b <= 1` and `b - a = 1`. This normalizer preserves\nsparsity by mapping\
        \ zero to zero.\n"
      id: normalize
    - description: 'Whether learner should cache input training data.

        '
      id: caching
    - description: 'Depth of Local Deep SVM tree.

        '
      id: tree_depth
    - description: 'Regularizer for classifier parameter W.

        '
      id: lambda_w
    - description: 'Regularizer for kernel parameter Theta.

        '
      id: lambda_theta
    - description: 'Regularizer for kernel parameter Thetaprime.

        '
      id: lambda_thetaprime
    - description: 'Parameter for sigmoid sharpness.

        '
      id: sigma
    - description: 'Number of iterations.

        '
      id: num_iterations
    - description: 'No bias.

        '
      id: no_bias
    - description: 'Additional arguments sent to compute engine.

        '
      id: params
  type: class
  uid: microsoftml_scikit.svm.LocalDeepSvmBinaryClassifier
- class: microsoftml_scikit.svm.LocalDeepSvmBinaryClassifier
  fullName: microsoftml_scikit.svm.LocalDeepSvmBinaryClassifier.decision_function
  langs:
  - python
  module: microsoftml_scikit.svm
  name: decision_function
  source:
    id: decision_function
    path: microsoftml_scikit\internal\utils\utils.py
    remote:
      branch: HEAD
      path: microsoftml_scikit\internal\utils\utils.py
      repo: https://apidrop.visualstudio.com/Content%20CI/_git/ReferenceAutomation
    startLine: 161
  summary: 'Returns score values

    '
  syntax:
    content: decision_function(X, **params)
  type: method
  uid: microsoftml_scikit.svm.LocalDeepSvmBinaryClassifier.decision_function
- class: microsoftml_scikit.svm.LocalDeepSvmBinaryClassifier
  fullName: microsoftml_scikit.svm.LocalDeepSvmBinaryClassifier.get_params
  langs:
  - python
  module: microsoftml_scikit.svm
  name: get_params
  source:
    id: get_params
    path: microsoftml_scikit\svm\_localdeepsvmbinaryclassifier.py
    remote:
      branch: HEAD
      path: microsoftml_scikit\svm\_localdeepsvmbinaryclassifier.py
      repo: https://apidrop.visualstudio.com/Content%20CI/_git/ReferenceAutomation
    startLine: 168
  summary: 'Get the parameters for this operator.

    '
  syntax:
    content: get_params(deep=False)
    parameters:
    - defaultValue: 'False'
      id: deep
  type: method
  uid: microsoftml_scikit.svm.LocalDeepSvmBinaryClassifier.get_params
- class: microsoftml_scikit.svm.LocalDeepSvmBinaryClassifier
  fullName: microsoftml_scikit.svm.LocalDeepSvmBinaryClassifier.predict_proba
  langs:
  - python
  module: microsoftml_scikit.svm
  name: predict_proba
  source:
    id: predict_proba
    path: microsoftml_scikit\internal\utils\utils.py
    remote:
      branch: HEAD
      path: microsoftml_scikit\internal\utils\utils.py
      repo: https://apidrop.visualstudio.com/Content%20CI/_git/ReferenceAutomation
    startLine: 154
  summary: 'Returns probabilities

    '
  syntax:
    content: predict_proba(X, **params)
  type: method
  uid: microsoftml_scikit.svm.LocalDeepSvmBinaryClassifier.predict_proba
references:
- fullName: microsoftml_scikit.svm.LocalDeepSvmBinaryClassifier.decision_function
  isExternal: false
  name: decision_function
  parent: microsoftml_scikit.svm.LocalDeepSvmBinaryClassifier
  uid: microsoftml_scikit.svm.LocalDeepSvmBinaryClassifier.decision_function
- fullName: microsoftml_scikit.svm.LocalDeepSvmBinaryClassifier.get_params
  isExternal: false
  name: get_params
  parent: microsoftml_scikit.svm.LocalDeepSvmBinaryClassifier
  uid: microsoftml_scikit.svm.LocalDeepSvmBinaryClassifier.get_params
- fullName: microsoftml_scikit.svm.LocalDeepSvmBinaryClassifier.predict_proba
  isExternal: false
  name: predict_proba
  parent: microsoftml_scikit.svm.LocalDeepSvmBinaryClassifier
  uid: microsoftml_scikit.svm.LocalDeepSvmBinaryClassifier.predict_proba
