### YamlMime:UniversalReference
api_name: []
items:
- children:
  - microsoftml_scikit.internal.core.linear_model.sgdbinaryclassifier.SgdBinaryClassifier.get_node
  class: microsoftml_scikit.internal.core.linear_model.sgdbinaryclassifier.SgdBinaryClassifier
  fullName: microsoftml_scikit.internal.core.linear_model.sgdbinaryclassifier.SgdBinaryClassifier
  inheritance:
  - inheritance:
    - type: builtins.object
    type: microsoftml_scikit.internal.core.base_pipeline_item.BasePipelineItem
  - inheritance:
    - inheritance:
      - inheritance:
        - type: builtins.object
        type: microsoftml_scikit.internal.core.base_pipeline_item.BaseSignature
      type: microsoftml_scikit.internal.core.base_pipeline_item.DefaultSignature
    type: microsoftml_scikit.internal.core.base_pipeline_item.DefaultSignatureWithRoles
  langs:
  - python
  module: microsoftml_scikit.internal.core.linear_model.sgdbinaryclassifier
  name: SgdBinaryClassifier
  source:
    id: SgdBinaryClassifier
    path: microsoftml_scikit\internal\core\linear_model\sgdbinaryclassifier.py
    remote:
      branch: master
      path: microsoftml_scikit\internal\core\linear_model\sgdbinaryclassifier.py
      repo: https://msdata.visualstudio.com/DefaultCollection/AlgorithmsAndDataScience/_git/PyTlc
    startLine: 21
  summary: "\n**Description**\n\n   Machine Learning Hogwild Stochastic Gradient Descent\
    \ Binary Classifier\n\n**Details**\n\n   The Stochastic Gradient Descent (SGD)\
    \ is one of the most popular\n   stochastic optimization procedure that can be\
    \ integrated into several\n   machine learning tasks to achieve state-of-the-art\
    \ performance. The\n   Hogwild SGD binary classification learner implements SGD\
    \ for binary\n   classification that supports multi-threading without any locking.\
    \ If the\n   associated optimization problem is sparse, then Hogwild SGD achieves\
    \ a\n   nearly optimal rate of convergence. For a detailed reference, please\n\
    \   refer to [http://arxiv.org/pdf/1106.5730v2.pdf](http://arxiv.org/pdf/1106.5730v2.pdf).\n\
    \nNote: This algorithm will attempt to load the entire dataset into memory when\
    \ `train_threads > 1` (multi-threading). \n\n**See Also**\n\n   @microsoftml_scikit.linear_model.LogisticRegressionClassifier,\n\
    \   @microsoftml_scikit.linear_model.AveragedPerceptronBinaryClassifier\n\n**Reference**\n\
    \n   [http://arxiv.org/pdf/1106.5730v2.pdf](http://arxiv.org/pdf/1106.5730v2.pdf)\n\
    \n\n\n\n"
  syntax:
    content: SgdBinaryClassifier(normalize='Auto', caching='Auto', loss='log', l2_weight=1e-06,
      train_threads=None, convergence_tolerance=0.0001, max_iterations=20, init_learning_rate=0.01,
      shuffle=True, positive_instance_weight=1.0, check_frequency=None, **params)
    parameters:
    - description: "Specifies the type of automatic normalization used:\n\n* `\"Auto\"\
        `: if normalization is needed, it is performed automatically. This is the\
        \ default choice. \n\n* `\"No\"`: no normalization is performed. \n\n* `\"\
        Yes\"`: normalization is performed. \n\n* `\"Warn\"`: if normalization is\
        \ needed, a warning message is displayed, but normalization is not performed.\
        \ \n\nNormalization rescales disparate data ranges to a standard scale. Feature\n\
        scaling insures the distances between data points are proportional and\nenables\
        \ various optimization methods such as gradient descent to converge\nmuch\
        \ faster. If normalization is performed, a `MaxMin` normalizer is\nused. It\
        \ normalizes values in an interval [a, b] where `-1 <= a <= 0`\nand `0 <=\
        \ b <= 1` and `b - a = 1`. This normalizer preserves\nsparsity by mapping\
        \ zero to zero.\n"
      id: normalize
    - description: 'Whether learner should cache input training data.

        '
      id: caching
    - description: 'The default is @microsoftml_scikit.loss.Log. Other choices are
        @microsoftml_scikit.loss.Exp, @microsoftml_scikit.loss.Hinge, and @microsoftml_scikit.loss.SmoothedHinge.
        For more information, please see *the documentation page about losses*.

        '
      id: loss
    - description: 'L2 regularizer constant.

        '
      id: l2_weight
    - description: 'Degree of lock-free parallelism. Defaults to automatic depending
        on data sparseness. Determinism

        not guaranteed.

        '
      id: train_threads
    - description: 'Exponential moving averaged improvement tolerance for convergence.

        '
      id: convergence_tolerance
    - description: 'Maximum number of iterations; set to 1 to simulate online learning.

        '
      id: max_iterations
    - description: 'Initial learning rate (only used by SGD).

        '
      id: init_learning_rate
    - description: 'Shuffle data every epoch?.

        '
      id: shuffle
    - description: 'Apply weight to the positive class, for imbalanced data.

        '
      id: positive_instance_weight
    - description: 'Convergence check frequency (in terms of number of iterations).
        Default equals number of

        threads.

        '
      id: check_frequency
    - description: 'Additional arguments sent to compute engine.

        '
      id: params
  type: class
  uid: microsoftml_scikit.internal.core.linear_model.sgdbinaryclassifier.SgdBinaryClassifier
- class: microsoftml_scikit.internal.core.linear_model.sgdbinaryclassifier.SgdBinaryClassifier
  fullName: microsoftml_scikit.internal.core.linear_model.sgdbinaryclassifier.SgdBinaryClassifier.get_node
  langs:
  - python
  module: microsoftml_scikit.internal.core.linear_model.sgdbinaryclassifier
  name: get_node
  source:
    id: get_node
    path: microsoftml_scikit\internal\utils\utils.py
    remote:
      branch: master
      path: microsoftml_scikit\internal\utils\utils.py
      repo: https://msdata.visualstudio.com/DefaultCollection/AlgorithmsAndDataScience/_git/PyTlc
    startLine: 139
  syntax:
    content: get_node(**all_args)
  type: method
  uid: microsoftml_scikit.internal.core.linear_model.sgdbinaryclassifier.SgdBinaryClassifier.get_node
references:
- fullName: microsoftml_scikit.internal.core.linear_model.sgdbinaryclassifier.SgdBinaryClassifier.get_node
  isExternal: false
  name: get_node
  parent: microsoftml_scikit.internal.core.linear_model.sgdbinaryclassifier.SgdBinaryClassifier
  uid: microsoftml_scikit.internal.core.linear_model.sgdbinaryclassifier.SgdBinaryClassifier.get_node
