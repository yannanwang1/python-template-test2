### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: microsoftml_scikit.svm.OneClassSvmAnomalyDetector
  fullName: microsoftml_scikit.svm.OneClassSvmAnomalyDetector
  inheritance:
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: microsoftml_scikit.internal.core.base_pipeline_item.BasePipelineItem
    - inheritance:
      - inheritance:
        - inheritance:
          - type: builtins.object
          type: microsoftml_scikit.internal.core.base_pipeline_item.BaseSignature
        type: microsoftml_scikit.internal.core.base_pipeline_item.DefaultSignature
      type: microsoftml_scikit.internal.core.base_pipeline_item.DefaultSignatureWithRoles
    type: microsoftml_scikit.internal.core.svm.oneclasssvmanomalydetector.OneClassSvmAnomalyDetector
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: sklearn.base.BaseEstimator
    - inheritance:
      - type: builtins.object
      type: microsoftml_scikit.internal.core.base_pipeline_item.BasePipelineItem
    type: microsoftml_scikit.base_predictor.BasePredictor
  - inheritance:
    - type: builtins.object
    type: sklearn.base.ClassifierMixin
  langs:
  - python
  module: microsoftml_scikit.svm
  name: OneClassSvmAnomalyDetector
  source:
    id: OneClassSvmAnomalyDetector
    path: microsoftml_scikit\svm\oneclasssvmanomalydetector.py
    remote:
      branch: master
      path: microsoftml_scikit\svm\oneclasssvmanomalydetector.py
      repo: https://msdata.visualstudio.com/DefaultCollection/AlgorithmsAndDataScience/_git/PyTlc
    startLine: 20
  summary: "\n**Description**\n\n   Machine Learning One Class Support Vector Machines\n\
    \n**Details**\n\n   One-class SVM is an algorithm for anomaly detection. The goal\
    \ of anomaly\n   detection is to identify outliers that do not belong to some\
    \ target class.\n   This type of SVM is one-class because the training set contains\
    \ only\n   examples from the target class. It infers what properties are normal\
    \ for\n   the objects in the target class and from these properties predicts\n\
    \   which examples are unlike the normal examples. This is useful for anomaly\n\
    \   detection because the scarcity of training examples is the defining\n   character\
    \ of anomalies: typically there are very few examples of network\n   intrusion,\
    \ fraud, or other types of anomalous behavior.\n\nNote: This algorithm is single-threaded\
    \ and will always attempt to load the entire dataset into memory. \n\n**See Also**\n\
    \n   @../../microsoftml_scikit.linear_kernel,\n   @../../microsoftml_scikit.polynomial_kernel,\n\
    \   @../../microsoftml_scikit.rbf_kernel,\n   @../../microsoftml_scikit.sigmoid_kernel,\n\
    \   @../../microsoftml_scikit.rx_predict.\n\n**Reference**\n\n   [Wikipedia: Anomaly\
    \ detection](https://en.wikipedia.org/wiki/Anomaly_detection)\n\n   [Microsoft\
    \ Azure Machine Learning Studio: One-Class Support Vector Machine](https://msdn.microsoft.com/en-us/library/azure/dn913103.aspx)\n\
    \n   [Estimating the Support of a High-Dimensional Distribution](http://research.microsoft.com/pubs/69731/tr-99-87.pdf)\n\
    \n   [New Support Vector Algorithms](http://www.stat.purdue.edu/~yuzhu/stat598m3/Papers/NewSVM.pdf)\n\
    \n   [LIBSVM: A Library for Support Vector Machines](https://www.csie.ntu.edu.tw/~cjlin/papers/libsvm.pdf)\n\
    \n\n"
  syntax:
    content: OneClassSvmAnomalyDetector(kernel=None, epsilon=0.001, nu=0.1, normalize='Auto',
      caching='Auto', cache_size=100.0, shrink=True, feature=None, columns=None, **params)
    parameters:
    - description: 'see *l-pipeline-syntax*.

        '
      id: feature
    - description: 'see *l-pipeline-syntax*.

        '
      id: columns
    - description: "A character string representing the kernel used for computing\n\
        inner products. For more information, see @../../ma_kernel. The\nfollowing\
        \ choices are available:\n\n* @../../microsoftml_scikit.rbf_kernel: Radial\
        \ basis function kernel. It's parameter represents``gamma`` in the term `exp(-gamma|x-y|^2`.\
        \ If not specified, it defaults to `1` divided by the number of features used.\
        \ For example, `rbf_kernel(gamma = .1)`. This is the default value. \n\n*\
        \ @../../microsoftml_scikit.linear_kernel: Linear kernel. \n\n* @../../microsoftml_scikit.polynomial_kernel:\
        \ Polynomial kernel with parameter names `a`, `bias`, and `deg` in the term\
        \ `(a*<x,y> + bias)^deg`. The `bias`, defaults to `0`. The degree, `deg`,\
        \ defaults to `3`. If `a` is not specified, it is set to `1` divided by the\
        \ number of features. \n\n* @../../microsoftml_scikit.sigmoid_kernel: Sigmoid\
        \ kernel with parameter names `gamma` and `coef0` in the term `tanh(gamma*<x,y>\
        \ + coef0)`. `gamma`, defaults to to `1` divided by the number of features.\
        \ The parameter `coef0` defaults to `0`.  For example, `sigmoid_kernel(gamma\
        \ = .1, coef0 = 0)`. \n"
      id: kernel
    - description: 'The threshold for optimizer convergence. If the

        improvement between iterations is less than the threshold, the algorithm

        stops and returns the current model. The value must be greater than or equal

        to `numpy.finfo(double).eps`. The default value is 0.001.

        '
      id: epsilon
    - description: 'The trade-off between the fraction of outliers and the number
        of

        support vectors (represented by the Greek letter nu). Must be between 0 and

        1, typically between 0.1 and 0.5. The default value is 0.1.

        '
      id: nu
    - description: "Specifies the type of automatic normalization used:\n\n* `\"Auto\"\
        `: if normalization is needed, it is performed automatically. This is the\
        \ default choice. \n\n* `\"No\"`: no normalization is performed. \n\n* `\"\
        Yes\"`: normalization is performed. \n\n* `\"Warn\"`: if normalization is\
        \ needed, a warning message is displayed, but normalization is not performed.\
        \ \n\nNormalization rescales disparate data ranges to a standard scale. Feature\n\
        scaling insures the distances between data points are proportional and\nenables\
        \ various optimization methods such as gradient descent to converge\nmuch\
        \ faster. If normalization is performed, a `MaxMin` normalizer is\nused. It\
        \ normalizes values in an interval [a, b] where `-1 <= a <= 0`\nand `0 <=\
        \ b <= 1` and `b - a = 1`. This normalizer preserves\nsparsity by mapping\
        \ zero to zero.\n"
      id: normalize
    - description: 'Whether learner should cache input training data.

        '
      id: caching
    - description: 'Cache size, specified in megabytes.

        '
      id: cache_size
    - description: 'Uses the shrinking heuristic if `True`. In this case,

        some samples will be "shrunk" during the training procedure, which may speed

        up training. The default value is `True`.

        '
      id: shrink
    - description: 'Additional arguments sent to compute engine.

        '
      id: params
  type: class
  uid: microsoftml_scikit.svm.OneClassSvmAnomalyDetector
references: []
