### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: microsoftml_scikit.OneClassSVMAnomalyDetector
  fullName: microsoftml_scikit.OneClassSVMAnomalyDetector
  inheritance:
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: microsoftml_scikit.modules.base.base_pipeline_item.BasePipelineItem
    type: microsoftml_scikit.modules.core.svm.oneclasssvmanomalydetector.OneClassSVMAnomalyDetector
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: sklearn.base.BaseEstimator
    - inheritance:
      - type: builtins.object
      type: microsoftml_scikit.modules.base.base_pipeline_item.BasePipelineItem
    type: microsoftml_scikit.modules.base.base_predictor.BasePredictor
  - inheritance:
    - type: builtins.object
    type: sklearn.base.RegressorMixin
  langs:
  - python
  module: microsoftml_scikit
  name: OneClassSVMAnomalyDetector
  source:
    id: OneClassSVMAnomalyDetector
    path: microsoftml_scikit\modules\svm\oneclasssvmanomalydetector.py
    remote:
      branch: master
      path: microsoftml_scikit\modules\svm\oneclasssvmanomalydetector.py
      repo: https://msdata.visualstudio.com/DefaultCollection/AlgorithmsAndDataScience/_git/PyTlc
    startLine: 20
  summary: '















    '
  syntax:
    content: 'OneClassSVMAnomalyDetector(kernel: dict = None, epsilon: numbers.Real
      = 0.001, feature_column: str = ''Features'', nu: numbers.Real = 0.1, normalize:
      str = ''Auto'', caching: str = ''Auto'', cache_size: numbers.Real = 100.0, shrink:
      bool = True, **params)'
    parameters:
    - description: "A character string representing the kernel used for computing\n\
        inner products. For more information, see @../../ma_kernel. The\nfollowing\
        \ choices are available:\n\n* @../../microsoftml_scikit.rbf_kernel: Radial\
        \ basis function kernel. It's parameter represents``gamma`` in the term `exp(-gamma|x-y|^2`.\
        \ If not specified, it defaults to `1` divided by the number of features used.\
        \ For example, `rbf_kernel(gamma = .1)`. This is the default value. \n\n*\
        \ @../../microsoftml_scikit.linear_kernel: Linear kernel. \n\n* @../../microsoftml_scikit.polynomial_kernel:\
        \ Polynomial kernel with parameter names `a`, `bias`, and `deg` in the term\
        \ `(a*<x,y> + bias)^deg`. The `bias`, defaults to `0`. The degree, `deg`,\
        \ defaults to `3`. If `a` is not specified, it is set to `1` divided by the\
        \ number of features. \n\n* @../../microsoftml_scikit.sigmoid_kernel: Sigmoid\
        \ kernel with parameter names `gamma` and `coef0` in the term `tanh(gamma*<x,y>\
        \ + coef0)`. `gamma`, defaults to to `1` divided by the number of features.\
        \ The parameter `coef0` defaults to `0`.  For example, `sigmoid_kernel(gamma\
        \ = .1, coef0 = 0)`. \n"
      id: kernel
    - description: 'The threshold for optimizer convergence. If the

        improvement between iterations is less than the threshold, the algorithm

        stops and returns the current model. The value must be greater than or equal

        to `numpy.finfo(double).eps`. The default value is 0.001.

        '
      id: epsilon
    - description: 'Column to use for features.

        '
      id: feature_column
    - description: 'The trade-off between the fraction of outliers and the number
        of

        support vectors (represented by the Greek letter nu). Must be between 0 and

        1, typically between 0.1 and 0.5. The default value is 0.1.

        '
      id: nu
    - description: "Specifies the type of automatic normalization used:\n\n* `\"Auto\"\
        `: if normalization is needed, it is performed automatically. This is the\
        \ default choice. \n\n* `\"No\"`: no normalization is performed. \n\n* `\"\
        Yes\"`: normalization is performed. \n\n* `\"Warn\"`: if normalization is\
        \ needed, a warning message is displayed, but normalization is not performed.\
        \ \n\nNormalization rescales disparate data ranges to a standard scale. Feature\n\
        scaling insures the distances between data points are proportional and\nenables\
        \ various optimization methods such as gradient descent to converge\nmuch\
        \ faster. If normalization is performed, a `MaxMin` normalizer is\nused. It\
        \ normalizes values in an interval [a, b] where `-1 <= a <= 0`\nand `0 <=\
        \ b <= 1` and `b - a = 1`. This normalizer preserves\nsparsity by mapping\
        \ zero to zero.\n"
      id: normalize
    - description: 'Whether learner should cache input training data.

        '
      id: caching
    - description: 'Cache size, specified in megabytes.

        '
      id: cache_size
    - description: 'Uses the shrinking heuristic if `True`. In this case,

        some samples will be "shrunk" during the training procedure, which may speed

        up training. The default value is `True`.

        '
      id: shrink
    - description: 'Additional arguments sent to compute engine.

        '
      id: params
  type: class
  uid: microsoftml_scikit.OneClassSVMAnomalyDetector
references: []
