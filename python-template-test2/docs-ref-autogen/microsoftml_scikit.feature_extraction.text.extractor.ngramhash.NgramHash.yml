### YamlMime:UniversalReference
api_name: []
items:
- children:
  - microsoftml_scikit.feature_extraction.text.extractor.ngramhash.NgramHash.get_params
  class: microsoftml_scikit.feature_extraction.text.extractor.ngramhash.NgramHash
  fullName: microsoftml_scikit.feature_extraction.text.extractor.ngramhash.NgramHash
  inheritance:
  - inheritance:
    - inheritance:
      - inheritance:
        - type: builtins.object
        type: builtins.dict
      type: microsoftml_scikit.internal.utils.entrypoints.Component
    type: microsoftml_scikit.internal.core.feature_extraction.text.extractor.ngramhash.NgramHash
  langs:
  - python
  module: microsoftml_scikit.feature_extraction.text.extractor.ngramhash
  name: NgramHash
  source:
    id: NgramHash
    path: microsoftml_scikit\feature_extraction\text\extractor\ngramhash.py
    remote:
      branch: master
      path: microsoftml_scikit\feature_extraction\text\extractor\ngramhash.py
      repo: https://msdata.visualstudio.com/DefaultCollection/AlgorithmsAndDataScience/_git/PyTlc
    startLine: 18
  summary: "**Description**\n   Extracts NGrams from text and convert them to vector\
    \ using hashing trick.\n\n"
  syntax:
    content: NgramHash(hash_bits=16, ngram_length=1, skip_length=0, all_lengths=True,
      seed=314489979, ordered=True, invert_hash=0, columns=None, **params)
    parameters:
    - description: 'see *l-pipeline-syntax*.

        '
      id: columns
    - description: 'Number of bits to hash into. Must be between 1 and 30, inclusive.

        '
      id: hash_bits
    - description: 'Ngram length.

        '
      id: ngram_length
    - description: 'Maximum number of tokens to skip when constructing an ngram.

        '
      id: skip_length
    - description: 'Whether to include all ngram lengths up to ngramLength or only
        ngramLength.

        '
      id: all_lengths
    - description: 'Hashing seed.

        '
      id: seed
    - description: 'Whether the position of each source column should be included
        in the hash (when there are multiple

        source columns).

        '
      id: ordered
    - description: 'Limit the number of keys used to generate the slot name to this
        many. 0 means no invert hashing, -1

        means no limit.

        '
      id: invert_hash
    - description: 'Additional arguments sent to compute engine.

        '
      id: params
  type: class
  uid: microsoftml_scikit.feature_extraction.text.extractor.ngramhash.NgramHash
- class: microsoftml_scikit.feature_extraction.text.extractor.ngramhash.NgramHash
  fullName: microsoftml_scikit.feature_extraction.text.extractor.ngramhash.NgramHash.get_params
  langs:
  - python
  module: microsoftml_scikit.feature_extraction.text.extractor.ngramhash
  name: get_params
  source:
    id: get_params
    path: microsoftml_scikit\feature_extraction\text\extractor\ngramhash.py
    remote:
      branch: master
      path: microsoftml_scikit\feature_extraction\text\extractor\ngramhash.py
      repo: https://msdata.visualstudio.com/DefaultCollection/AlgorithmsAndDataScience/_git/PyTlc
    startLine: 69
  syntax:
    content: get_params(deep=False)
    parameters:
    - id: self
    - defaultValue: 'False'
      id: deep
  type: method
  uid: microsoftml_scikit.feature_extraction.text.extractor.ngramhash.NgramHash.get_params
references:
- fullName: microsoftml_scikit.feature_extraction.text.extractor.ngramhash.NgramHash.get_params
  isExternal: false
  name: get_params
  parent: microsoftml_scikit.feature_extraction.text.extractor.ngramhash.NgramHash
  uid: microsoftml_scikit.feature_extraction.text.extractor.ngramhash.NgramHash.get_params
