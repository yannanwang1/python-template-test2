### YamlMime:UniversalReference
api_name: []
items:
- children:
  - microsoftml_scikit.feature_extraction.categorical.onehotvectorizer.OneHotVectorizer.get_params
  class: microsoftml_scikit.feature_extraction.categorical.onehotvectorizer.OneHotVectorizer
  fullName: microsoftml_scikit.feature_extraction.categorical.onehotvectorizer.OneHotVectorizer
  inheritance:
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: microsoftml_scikit.internal.core.base_pipeline_item.BasePipelineItem
    - inheritance:
      - inheritance:
        - inheritance:
          - type: builtins.object
          type: microsoftml_scikit.internal.core.base_pipeline_item.BaseSignature
        type: microsoftml_scikit.internal.core.base_pipeline_item.SingleOutputSignature
      type: microsoftml_scikit.internal.core.base_pipeline_item.EqualInputOutputSignature
    type: microsoftml_scikit.internal.core.feature_extraction.categorical.onehotvectorizer.OneHotVectorizer
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: sklearn.base.BaseEstimator
    - inheritance:
      - type: builtins.object
      type: microsoftml_scikit.internal.core.base_pipeline_item.BasePipelineItem
    type: microsoftml_scikit.base_transform.BaseTransform
  - inheritance:
    - type: builtins.object
    type: sklearn.base.TransformerMixin
  langs:
  - python
  module: microsoftml_scikit.feature_extraction.categorical.onehotvectorizer
  name: OneHotVectorizer
  source:
    id: OneHotVectorizer
    path: microsoftml_scikit\feature_extraction\categorical\onehotvectorizer.py
    remote:
      branch: master
      path: microsoftml_scikit\feature_extraction\categorical\onehotvectorizer.py
      repo: https://msdata.visualstudio.com/DefaultCollection/AlgorithmsAndDataScience/_git/PyTlc
    startLine: 20
  summary: "\n**Description**\n\n   Categorical transform that can be performed on\
    \ data before\n   training a model.\n\n**Details**\n\n   The `OneHotVectorizer`\
    \ transform passes through a data set, operating\n   on text columns, to build\
    \ a dictionary of categories. For each row,\n   the entire text string appearing\
    \ in the input column is defined as a\n   category. The output of the categorical\
    \ transform is an indicator vector.\n   Each slot in this vector corresponds to\
    \ a category in the dictionary, so\n   its length is the size of the built dictionary.\
    \ The categorical transform\n   can be applied to one or more columns, in which\
    \ case it builds a separate\n   dictionary for each column that it is applied\
    \ to.\n\n   `OneHotVectorizer` is not currently supported to handle factor data.\n\
    \n**See Also**\n\n   @microsoftml_scikit.feature_extraction.categorical.OneHotHashVectorizer\n\
    \n\n\n"
  syntax:
    content: OneHotVectorizer(max_num_terms=1000000, output_kind='Ind', term=None,
      sort='Occurrence', text_key_values=True, columns=None, **params)
    parameters:
    - description: "a dictionary of key-value pairs, where key is the output column\
        \ name and value is the input column name.\n\n* Multiple key-value pairs are\
        \ allowed. \n\n* Input column type: numeric or string. \n\n* Output column\
        \ type: *VectorType*. \n\n* If the output column names are same as the input\
        \ column names, then simply specify `columns` as a list of strings. \n\nThe\
        \ << operator can be used to set this value (see :ref:LinkToOperator)\n\n\
        For example\n   * OneHotVectorizer(columns={'out1':'input1', 'out2':'input2'})\
        \ \n\n   * OneHotVectorizer() << {'out1':'input1', 'out2':'input2'} \n\nFor\
        \ more details see *l-pipeline-syntax*.\n"
      id: columns
    - description: 'An integer that specifies the maximum number of

        categories to include in the dictionary. The default value is 1000000.

        '
      id: max_num_terms
    - description: "A character string that specifies the kind of output kind.\n\n\
        * `\"Bag\"`: Outputs a multi-set vector. If the input column is a vector of\
        \ categories, the output contains one vector, where the value in each slot\
        \ is the number of occurrences of the category in the input vector. If the\
        \ input column contains a single category, the indicator vector and the bag\
        \ vector are equivalent \n\n* `\"Ind\"`: Outputs an indicator vector. The\
        \ input column is a vector of categories, and the output contains one indicator\
        \ vector per slot in the input column. \n\n* `\"Key\"`: Outputs an index.\
        \ The output is an integer id (between 1 and the number of categories in the\
        \ dictionary) of the category. \n\n* `\"Bin\"`: Outputs a vector which is\
        \ the binary representation of the category. \n\nThe default value is `\"\
        Ind\"`.\n"
      id: output_kind
    - description: 'Optional character vector of terms or categories.

        '
      id: term
    - description: "A character string that specifies the sorting criteria.\n\n* `\"\
        Occurrence\"`: Sort categories by occurences. Most frequent is first. \n\n\
        * `\"Value\"`: Sort categories by values. \n"
      id: sort
    - description: 'Whether key value metadata should be text, regardless of the actual
        input type.

        '
      id: text_key_values
    - description: 'Additional arguments sent to compute engine.

        '
      id: params
  type: class
  uid: microsoftml_scikit.feature_extraction.categorical.onehotvectorizer.OneHotVectorizer
- class: microsoftml_scikit.feature_extraction.categorical.onehotvectorizer.OneHotVectorizer
  fullName: microsoftml_scikit.feature_extraction.categorical.onehotvectorizer.OneHotVectorizer.get_params
  langs:
  - python
  module: microsoftml_scikit.feature_extraction.categorical.onehotvectorizer
  name: get_params
  source:
    id: get_params
    path: microsoftml_scikit\feature_extraction\categorical\onehotvectorizer.py
    remote:
      branch: master
      path: microsoftml_scikit\feature_extraction\categorical\onehotvectorizer.py
      repo: https://msdata.visualstudio.com/DefaultCollection/AlgorithmsAndDataScience/_git/PyTlc
    startLine: 122
  syntax:
    content: get_params(deep=False)
    parameters:
    - id: self
    - defaultValue: 'False'
      id: deep
  type: method
  uid: microsoftml_scikit.feature_extraction.categorical.onehotvectorizer.OneHotVectorizer.get_params
references:
- fullName: microsoftml_scikit.feature_extraction.categorical.onehotvectorizer.OneHotVectorizer.get_params
  isExternal: false
  name: get_params
  parent: microsoftml_scikit.feature_extraction.categorical.onehotvectorizer.OneHotVectorizer
  uid: microsoftml_scikit.feature_extraction.categorical.onehotvectorizer.OneHotVectorizer.get_params
