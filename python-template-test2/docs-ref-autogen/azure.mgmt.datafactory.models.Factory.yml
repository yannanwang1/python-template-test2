### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.mgmt.datafactory.models.Factory
  fullName: azure.mgmt.datafactory.models.Factory
  inheritance:
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: msrest.serialization.Model
    type: azure.mgmt.datafactory.models.resource.Resource
  langs:
  - python
  module: azure.mgmt.datafactory.models
  name: Factory
  source:
    id: Factory
    path: azure_mgmt_datafactory-0.2.2-py3.6.egg\azure\mgmt\datafactory\models\factory.py
    remote:
      branch: master
      path: azure_mgmt_datafactory-0.2.2-py3.6.egg\azure\mgmt\datafactory\models\factory.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 15
  summary: 'Factory resource type.


    Variables are only populated by the server, and will be ignored when

    sending a request.

    '
  syntax:
    content: Factory(location=None, tags=None, identity=None)
    parameters:
    - description: 'The resource location.

        '
      id: location
      type:
      - str
    - description: 'The resource tags.

        '
      id: tags
      type:
      - dict[str, str]
    - description: 'Managed service identity of the factory.

        '
      id: identity
      type:
      - azure.mgmt.datafactory.models.FactoryIdentity
    variables:
    - description: 'The resource identifier.

        '
      id: id
      type:
      - str
    - description: 'The resource name.

        '
      id: name
      type:
      - str
    - description: 'The resource type.

        '
      id: type
      type:
      - str
    - description: 'Factory provisioning state, example Succeeded.

        '
      id: provisioning_state
      type:
      - str
    - description: 'Time the factory was created in ISO8601 format.

        '
      id: create_time
      type:
      - datetime
    - description: 'Version of the factory.

        '
      id: version
      type:
      - str
  type: class
  uid: azure.mgmt.datafactory.models.Factory
references:
- fullName: dict[str, str]
  name: dict[str, str]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: dict[str, str]
