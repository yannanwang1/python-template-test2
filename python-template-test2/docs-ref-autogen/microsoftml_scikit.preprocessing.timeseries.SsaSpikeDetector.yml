### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: microsoftml_scikit.preprocessing.timeseries.SsaSpikeDetector
  fullName: microsoftml_scikit.preprocessing.timeseries.SsaSpikeDetector
  inheritance:
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: microsoftml_scikit.internal.core.base_pipeline_item.BasePipelineItem
    - inheritance:
      - inheritance:
        - type: builtins.object
        type: microsoftml_scikit.internal.core.base_pipeline_item.BaseSignature
      type: microsoftml_scikit.internal.core.base_pipeline_item.DefaultSignature
    type: microsoftml_scikit.internal.core.preprocessing.timeseries.ssaspikedetector.SsaSpikeDetector
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: sklearn.base.BaseEstimator
    - inheritance:
      - type: builtins.object
      type: microsoftml_scikit.internal.core.base_pipeline_item.BasePipelineItem
    type: microsoftml_scikit.base_transform.BaseTransform
  - inheritance:
    - type: builtins.object
    type: sklearn.base.TransformerMixin
  langs:
  - python
  module: microsoftml_scikit.preprocessing.timeseries
  name: SsaSpikeDetector
  source:
    id: SsaSpikeDetector
    path: microsoftml_scikit\preprocessing\timeseries\ssaspikedetector.py
    remote:
      branch: master
      path: microsoftml_scikit\preprocessing\timeseries\ssaspikedetector.py
      repo: https://msdata.visualstudio.com/DefaultCollection/AlgorithmsAndDataScience/_git/PyTlc
    startLine: 20
  summary: "**Description**\n   This transform detects the spikes in a seasonal time-series\
    \ using Singular Spectrum Analysis (SSA).\n"
  syntax:
    content: SsaSpikeDetector(training_window_size=0, confidence=0, seasonal_window_size=0,
      side='TwoSided', pvalue_history_length=100, error_function='SignedDifference',
      columns=None, **params)
    parameters:
    - description: 'see *l-pipeline-syntax*.

        '
      id: columns
    - description: 'The number of points from the beginning of the sequence used for
        training.

        '
      id: training_window_size
    - description: 'The confidence for spike detection in the range [0, 100].

        '
      id: confidence
    - description: 'An upper bound on the largest relevant seasonality in the input
        time-series.

        '
      id: seasonal_window_size
    - description: 'The argument that determines whether to detect positive or negative
        anomalies, or both.

        '
      id: side
    - description: 'The size of the sliding window for computing the p-value.

        '
      id: pvalue_history_length
    - description: 'The function used to compute the error between the expected and
        the observed value.

        '
      id: error_function
    - description: 'Additional arguments sent to compute engine.

        '
      id: params
  type: class
  uid: microsoftml_scikit.preprocessing.timeseries.SsaSpikeDetector
references: []
