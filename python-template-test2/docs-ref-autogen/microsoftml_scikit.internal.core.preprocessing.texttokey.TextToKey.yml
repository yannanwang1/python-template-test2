### YamlMime:UniversalReference
api_name: []
items:
- children:
  - microsoftml_scikit.internal.core.preprocessing.texttokey.TextToKey.get_node
  class: microsoftml_scikit.internal.core.preprocessing.texttokey.TextToKey
  fullName: microsoftml_scikit.internal.core.preprocessing.texttokey.TextToKey
  inheritance:
  - inheritance:
    - type: builtins.object
    type: microsoftml_scikit.internal.core.base_pipeline_item.BasePipelineItem
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: microsoftml_scikit.internal.core.base_pipeline_item.BaseSignature
    type: microsoftml_scikit.internal.core.base_pipeline_item.DefaultSignature
  langs:
  - python
  module: microsoftml_scikit.internal.core.preprocessing.texttokey
  name: TextToKey
  source:
    id: TextToKey
    path: microsoftml_scikit\internal\core\preprocessing\texttokey.py
    remote:
      branch: master
      path: microsoftml_scikit\internal\core\preprocessing\texttokey.py
      repo: https://msdata.visualstudio.com/DefaultCollection/AlgorithmsAndDataScience/_git/PyTlc
    startLine: 21
  summary: "\n**Description**\n\n   Text transforms that can be performed on data\
    \ before training\n   a model.\n\n**Details**\n\n   The `TextToKey` transform\
    \ converts a column of text to key values\n   using a dictionary. This operation\
    \ can be reversed by using\n   @microsoftml_scikit.preprocessing.KeyToText to\
    \ obtain the\n   orginal values.\n\n**See Also**\n\n   @microsoftml_scikit.preprocessing.KeyToText,\n\
    \   @microsoftml_scikit.feature_extraction.categorical.OneHotHashVectorizer,\n\
    \   @microsoftml_scikit.feature_extraction.categorical.OneHotVectorizer,\n   @microsoftml_scikit.feature_extraction.text.NGramFeaturizer.\n\
    \n\n\n\n"
  syntax:
    content: TextToKey(max_num_terms=1000000, term=None, sort='Occurrence', text_key_values=False,
      **params)
    parameters:
    - description: 'Maximum number of terms to keep per column when auto-training.

        '
      id: max_num_terms
    - description: 'List of terms.

        '
      id: term
    - description: 'How items should be ordered when vectorized. By default, they
        will be in the order encountered. If by value

        items are sorted according to their default comparison, e.g., text sorting
        will be case sensitive (e.g., ''A'' then

        ''Z'' then ''a'').

        '
      id: sort
    - description: 'Whether key value metadata should be text, regardless of the actual
        input type.

        '
      id: text_key_values
    - description: 'Additional arguments sent to compute engine.

        '
      id: params
  type: class
  uid: microsoftml_scikit.internal.core.preprocessing.texttokey.TextToKey
- class: microsoftml_scikit.internal.core.preprocessing.texttokey.TextToKey
  fullName: microsoftml_scikit.internal.core.preprocessing.texttokey.TextToKey.get_node
  langs:
  - python
  module: microsoftml_scikit.internal.core.preprocessing.texttokey
  name: get_node
  source:
    id: get_node
    path: microsoftml_scikit\internal\utils\utils.py
    remote:
      branch: master
      path: microsoftml_scikit\internal\utils\utils.py
      repo: https://msdata.visualstudio.com/DefaultCollection/AlgorithmsAndDataScience/_git/PyTlc
    startLine: 83
  syntax:
    content: get_node(**all_args)
  type: method
  uid: microsoftml_scikit.internal.core.preprocessing.texttokey.TextToKey.get_node
references:
- fullName: microsoftml_scikit.internal.core.preprocessing.texttokey.TextToKey.get_node
  isExternal: false
  name: get_node
  parent: microsoftml_scikit.internal.core.preprocessing.texttokey.TextToKey
  uid: microsoftml_scikit.internal.core.preprocessing.texttokey.TextToKey.get_node
