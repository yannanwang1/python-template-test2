### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: microsoftml_scikit.multiclass.OneVsRestClassifier
  fullName: microsoftml_scikit.multiclass.OneVsRestClassifier
  inheritance:
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: microsoftml_scikit.internal.core.base_pipeline_item.BasePipelineItem
    - inheritance:
      - inheritance:
        - inheritance:
          - type: builtins.object
          type: microsoftml_scikit.internal.core.base_pipeline_item.BaseSignature
        type: microsoftml_scikit.internal.core.base_pipeline_item.DefaultSignature
      type: microsoftml_scikit.internal.core.base_pipeline_item.DefaultSignatureWithRoles
    type: microsoftml_scikit.internal.core.multiclass.onevsrestclassifier.OneVsRestClassifier
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: sklearn.base.BaseEstimator
    - inheritance:
      - type: builtins.object
      type: microsoftml_scikit.internal.core.base_pipeline_item.BasePipelineItem
    type: microsoftml_scikit.base_predictor.BasePredictor
  - inheritance:
    - type: builtins.object
    type: sklearn.base.ClassifierMixin
  langs:
  - python
  module: microsoftml_scikit.multiclass
  name: OneVsRestClassifier
  source:
    id: OneVsRestClassifier
    path: microsoftml_scikit\multiclass\onevsrestclassifier.py
    remote:
      branch: master
      path: microsoftml_scikit\multiclass\onevsrestclassifier.py
      repo: https://msdata.visualstudio.com/DefaultCollection/AlgorithmsAndDataScience/_git/PyTlc
    startLine: 20
  summary: "**Description**\n   One-vs-All macro (OVA)\n"
  syntax:
    content: OneVsRestClassifier(classifier, output_for_sub_graph=0, use_probabilities=True,
      normalize='Auto', caching='Auto', feature=None, label=None, weight=None, columns=None,
      **params)
    parameters:
    - description: 'see *l-pipeline-syntax*.

        '
      id: feature
    - description: 'see *l-pipeline-syntax*.

        '
      id: label
    - description: 'see *l-pipeline-syntax*.

        '
      id: weight
    - description: 'see *l-pipeline-syntax*.

        '
      id: columns
    - description: 'The subgraph for the binary trainer used to construct the OVA
        learner. This should be a TrainBinary

        node.

        '
      id: classifier
    - description: 'The training subgraph output.

        '
      id: output_for_sub_graph
    - description: 'Use probabilities in OVA combiner.

        '
      id: use_probabilities
    - description: 'If `Auto`, the choice to normalize depends on the preference declared
        by the algorithm. This is the

        default choice. If `No`, no normalization is performed. If `Yes`, normalization
        always performed. If `Warn`,

        if normalization is needed by the algorithm, a warning message is displayed
        but normalization is not performed. If

        normalization is performed, a `MaxMin` normalizer is used. This normalizer
        preserves sparsity by mapping zero to

        zero.

        '
      id: normalize
    - description: 'Whether learner should cache input training data.

        '
      id: caching
    - description: 'Additional arguments sent to compute engine.

        '
      id: params
  type: class
  uid: microsoftml_scikit.multiclass.OneVsRestClassifier
references: []
