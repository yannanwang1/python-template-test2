### YamlMime:UniversalReference
api_name: []
items:
- children:
  - microsoftml_scikit.KMeansPlusPlus.fit
  - microsoftml_scikit.KMeansPlusPlus.fit_predict
  - microsoftml_scikit.KMeansPlusPlus.get_params
  - microsoftml_scikit.KMeansPlusPlus.predict
  - microsoftml_scikit.KMeansPlusPlus.set_params
  class: microsoftml_scikit.KMeansPlusPlus
  fullName: microsoftml_scikit.KMeansPlusPlus
  inheritance:
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: microsoftml_scikit.modules.base.base_pipeline_item.BasePipelineItem
    type: microsoftml_scikit.modules.core.cluster.kmeansplusplus.KMeansPlusPlus
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: sklearn.base.BaseEstimator
    - inheritance:
      - type: builtins.object
      type: microsoftml_scikit.modules.base.base_pipeline_item.BasePipelineItem
    type: microsoftml_scikit.modules.base.base_predictor.BasePredictor
  - inheritance:
    - type: builtins.object
    type: sklearn.base.ClusterMixin
  langs:
  - python
  module: microsoftml_scikit
  name: KMeansPlusPlus
  source:
    id: KMeansPlusPlus
    path: microsoftml_scikit\modules\cluster\kmeansplusplus.py
    remote:
      branch: master
      path: microsoftml_scikit\modules\cluster\kmeansplusplus.py
      repo: https://msdata.visualstudio.com/DefaultCollection/AlgorithmsAndDataScience/_git/PyTlc
    startLine: 20
  summary: '




















    '
  syntax:
    content: 'KMeansPlusPlus(feature_column: str = ''Features'', label_column: str
      = ''Label'', normalize: str = ''Auto'', caching: str = ''Auto'', k: numbers.Real
      = 5, train_threads: numbers.Real = None, init_algorithm: str = ''KMeansParallel'',
      opt_tol: numbers.Real = 1e-07, max_iterations: numbers.Real = 1000, accel_mem_budget_mb:
      numbers.Real = 4096, **params)'
    parameters:
    - description: 'Column to use for features.

        '
      id: feature_column
    - description: "Specifies the type of automatic normalization used:\n\n* `\"Auto\"\
        `: if normalization is needed, it is performed automatically. This is the\
        \ default choice. \n\n* `\"No\"`: no normalization is performed. \n\n* `\"\
        Yes\"`: normalization is performed. \n\n* `\"Warn\"`: if normalization is\
        \ needed, a warning message is displayed, but normalization is not performed.\
        \ \n\nNormalization rescales disparate data ranges to a standard scale. Feature\n\
        scaling insures the distances between data points are proportional and\nenables\
        \ various optimization methods such as gradient descent to converge\nmuch\
        \ faster. If normalization is performed, a `MaxMin` normalizer is\nused. It\
        \ normalizes values in an interval [a, b] where `-1 <= a <= 0`\nand `0 <=\
        \ b <= 1` and `b - a = 1`. This normalizer preserves\nsparsity by mapping\
        \ zero to zero.\n"
      id: normalize
    - description: 'Whether learner should cache input training data.

        '
      id: caching
    - description: 'The number of clusters.

        '
      id: k
    - description: 'Degree of lock-free parallelism. Defaults to automatic. Determinism
        not guaranteed.

        '
      id: train_threads
    - description: 'Cluster initialization algorithm.

        '
      id: init_algorithm
    - description: 'Tolerance parameter for trainer convergence. Lower = slower, more
        accurate.

        '
      id: opt_tol
    - description: 'Maximum number of iterations.

        '
      id: max_iterations
    - description: 'Memory budget (in MBs) to use for KMeans acceleration.

        '
      id: accel_mem_budget_mb
    - description: 'Additional arguments sent to compute engine.

        '
      id: params
  type: class
  uid: microsoftml_scikit.KMeansPlusPlus
- class: microsoftml_scikit.KMeansPlusPlus
  fullName: microsoftml_scikit.KMeansPlusPlus.fit
  langs:
  - python
  module: microsoftml_scikit
  name: fit
  source:
    id: fit
    path: microsoftml_scikit\utils\utils.py
    remote:
      branch: master
      path: microsoftml_scikit\utils\utils.py
      repo: https://msdata.visualstudio.com/DefaultCollection/AlgorithmsAndDataScience/_git/PyTlc
    startLine: 28
  summary: 'Fits the predictor.

    Returns self.

    '
  syntax:
    content: fit(X, y=None, **params)
  type: method
  uid: microsoftml_scikit.KMeansPlusPlus.fit
- class: microsoftml_scikit.KMeansPlusPlus
  fullName: microsoftml_scikit.KMeansPlusPlus.fit_predict
  langs:
  - python
  module: microsoftml_scikit
  name: fit_predict
  source:
    id: fit_predict
    path: sklearn\base.py
    remote:
      branch: master
      path: sklearn\base.py
      repo: https://msdata.visualstudio.com/DefaultCollection/AlgorithmsAndDataScience/_git/PyTlc
    startLine: 395
  summary: 'Performs clustering on X and returns cluster labels.

    '
  syntax:
    content: fit_predict(X, y=None)
    parameters:
    - description: 'Input data.

        '
      id: X
      type:
      - ndarray, shape (n_samples, n_features)
    - defaultValue: None
      id: y
    return:
      description: '**y** -- cluster labels

        '
      type:
      - ndarray, shape (n_samples,)
  type: method
  uid: microsoftml_scikit.KMeansPlusPlus.fit_predict
- class: microsoftml_scikit.KMeansPlusPlus
  fullName: microsoftml_scikit.KMeansPlusPlus.get_params
  langs:
  - python
  module: microsoftml_scikit
  name: get_params
  source:
    id: get_params
    path: sklearn\base.py
    remote:
      branch: master
      path: sklearn\base.py
      repo: https://msdata.visualstudio.com/DefaultCollection/AlgorithmsAndDataScience/_git/PyTlc
    startLine: 213
  summary: 'Get parameters for this estimator.

    '
  syntax:
    content: get_params(deep=True)
    parameters:
    - defaultValue: 'True'
      description: 'If True, will return the parameters for this estimator and

        contained subobjects that are estimators.

        '
      id: deep
      type:
      - boolean, optional
    return:
      description: '**params** -- Parameter names mapped to their values.

        '
      type:
      - mapping of string to any
  type: method
  uid: microsoftml_scikit.KMeansPlusPlus.get_params
- class: microsoftml_scikit.KMeansPlusPlus
  fullName: microsoftml_scikit.KMeansPlusPlus.predict
  langs:
  - python
  module: microsoftml_scikit
  name: predict
  source:
    id: predict
    path: microsoftml_scikit\utils\utils.py
    remote:
      branch: master
      path: microsoftml_scikit\utils\utils.py
      repo: https://msdata.visualstudio.com/DefaultCollection/AlgorithmsAndDataScience/_git/PyTlc
    startLine: 46
  summary: 'Returns predictions.

    '
  syntax:
    content: predict(X, **params)
  type: method
  uid: microsoftml_scikit.KMeansPlusPlus.predict
- class: microsoftml_scikit.KMeansPlusPlus
  fullName: microsoftml_scikit.KMeansPlusPlus.set_params
  langs:
  - python
  module: microsoftml_scikit
  name: set_params
  source:
    id: set_params
    path: sklearn\base.py
    remote:
      branch: master
      path: sklearn\base.py
      repo: https://msdata.visualstudio.com/DefaultCollection/AlgorithmsAndDataScience/_git/PyTlc
    startLine: 250
  summary: 'Set the parameters of this estimator.


    The method works on simple estimators as well as on nested objects

    (such as pipelines). The latter have parameters of the form

    `<component>__<parameter>` so that it''s possible to update each

    component of a nested object.

    '
  syntax:
    content: set_params(**params)
    parameters:
    - id: self
    return:
      type:
      - self
  type: method
  uid: microsoftml_scikit.KMeansPlusPlus.set_params
references:
- fullName: microsoftml_scikit.KMeansPlusPlus.fit
  isExternal: false
  name: fit
  parent: microsoftml_scikit.KMeansPlusPlus
  uid: microsoftml_scikit.KMeansPlusPlus.fit
- fullName: microsoftml_scikit.KMeansPlusPlus.fit_predict
  isExternal: false
  name: fit_predict
  parent: microsoftml_scikit.KMeansPlusPlus
  uid: microsoftml_scikit.KMeansPlusPlus.fit_predict
- fullName: microsoftml_scikit.KMeansPlusPlus.get_params
  isExternal: false
  name: get_params
  parent: microsoftml_scikit.KMeansPlusPlus
  uid: microsoftml_scikit.KMeansPlusPlus.get_params
- fullName: microsoftml_scikit.KMeansPlusPlus.predict
  isExternal: false
  name: predict
  parent: microsoftml_scikit.KMeansPlusPlus
  uid: microsoftml_scikit.KMeansPlusPlus.predict
- fullName: microsoftml_scikit.KMeansPlusPlus.set_params
  isExternal: false
  name: set_params
  parent: microsoftml_scikit.KMeansPlusPlus
  uid: microsoftml_scikit.KMeansPlusPlus.set_params
- fullName: ndarray, shape (n_samples, n_features)
  name: ndarray, shape (n_samples, n_features)
  spec.python:
  - fullName: ndarray
    name: ndarray
    uid: ndarray
  - fullName: ', '
    name: ', '
  - fullName: 'shape '
    name: 'shape '
    uid: 'shape '
  - fullName: (
    name: (
  - fullName: n_samples
    name: n_samples
    uid: n_samples
  - fullName: ', '
    name: ', '
  - fullName: n_features
    name: n_features
    uid: n_features
  - fullName: )
    name: )
  uid: ndarray, shape (n_samples, n_features)
- fullName: ndarray, shape (n_samples,)
  name: ndarray, shape (n_samples,)
  spec.python:
  - fullName: ndarray
    name: ndarray
    uid: ndarray
  - fullName: ', '
    name: ', '
  - fullName: 'shape '
    name: 'shape '
    uid: 'shape '
  - fullName: (
    name: (
  - fullName: n_samples,
    name: n_samples,
    uid: n_samples,
  - fullName: )
    name: )
  uid: ndarray, shape (n_samples,)
- fullName: boolean, optional
  name: boolean, optional
  spec.python:
  - fullName: boolean
    name: boolean
    uid: boolean
  - fullName: ', '
    name: ', '
  - fullName: optional
    name: optional
    uid: optional
  uid: boolean, optional
