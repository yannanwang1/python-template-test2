### YamlMime:UniversalReference
api_name: []
items:
- children:
  - microsoftml_scikit.internal.entrypoints.localdeepsvm_trainbinary.localdeepsvm_trainbinary
  fullName: microsoftml_scikit.internal.entrypoints.localdeepsvm_trainbinary
  langs:
  - python
  module: microsoftml_scikit.internal.entrypoints.localdeepsvm_trainbinary
  name: localdeepsvm_trainbinary
  source:
    id: localdeepsvm_trainbinary
    path: microsoftml_scikit\internal\entrypoints\localdeepsvm_trainbinary.py
    remote:
      branch: master
      path: microsoftml_scikit\internal\entrypoints\localdeepsvm_trainbinary.py
      repo: https://msdata.visualstudio.com/DefaultCollection/AlgorithmsAndDataScience/_git/PyTlc
    startLine: 0
  summary: 'LocalDeepSvm.TrainBinary

    '
  type: module
  uid: microsoftml_scikit.internal.entrypoints.localdeepsvm_trainbinary
- fullName: microsoftml_scikit.internal.entrypoints.localdeepsvm_trainbinary.localdeepsvm_trainbinary
  langs:
  - python
  module: microsoftml_scikit.internal.entrypoints.localdeepsvm_trainbinary
  name: localdeepsvm_trainbinary
  source:
    id: localdeepsvm_trainbinary
    path: microsoftml_scikit\internal\entrypoints\localdeepsvm_trainbinary.py
    remote:
      branch: master
      path: microsoftml_scikit\internal\entrypoints\localdeepsvm_trainbinary.py
      repo: https://msdata.visualstudio.com/DefaultCollection/AlgorithmsAndDataScience/_git/PyTlc
    startLine: 12
  summary: "**Description**\n   LD-SVM learns a binary, non-linear SVM classifier\
    \ with a kernel that is specifically designed to reduce prediction time. LD-SVM\
    \ learns decision boundaries that are locally linear.\n"
  syntax:
    content: localdeepsvm_trainbinary(training_data, predictor_model=None, feature_column='Features',
      label_column='Label', normalize_features='Auto', caching='Auto', tree_depth=3,
      lambda_w=0.1, lambda_theta=0.01, lambda_thetaprime=0.01, sigma=1.0, num_iterations=15000,
      no_bias=False, **params)
    parameters:
    - description: 'The data to be used for training (inputs).

        '
      id: training_data
    - defaultValue: None
      description: 'Column to use for features (inputs).

        '
      id: feature_column
    - defaultValue: Features
      description: 'Column to use for labels (inputs).

        '
      id: label_column
    - defaultValue: Label
      description: 'Normalize option for the feature column (inputs).

        '
      id: normalize_features
    - defaultValue: Auto
      description: 'Whether learner should cache input training data (inputs).

        '
      id: caching
    - defaultValue: Auto
      description: 'Depth of Local Deep SVM tree (inputs).

        '
      id: tree_depth
    - defaultValue: '3'
      description: 'Regularizer for classifier parameter W (inputs).

        '
      id: lambda_w
    - defaultValue: '0.1'
      description: 'Regularizer for kernel parameter Theta (inputs).

        '
      id: lambda_theta
    - defaultValue: '0.01'
      description: 'Regularizer for kernel parameter Thetaprime (inputs).

        '
      id: lambda_thetaprime
    - defaultValue: '0.01'
      description: 'Parameter for sigmoid sharpness (inputs).

        '
      id: sigma
    - defaultValue: '1.0'
      description: 'Number of iterations (inputs).

        '
      id: num_iterations
    - defaultValue: '15000'
      description: 'No bias (inputs).

        '
      id: no_bias
    - defaultValue: 'False'
      description: 'The trained model (outputs).

        '
      id: predictor_model
  type: function
  uid: microsoftml_scikit.internal.entrypoints.localdeepsvm_trainbinary.localdeepsvm_trainbinary
references:
- fullName: microsoftml_scikit.internal.entrypoints.localdeepsvm_trainbinary.localdeepsvm_trainbinary
  isExternal: false
  name: localdeepsvm_trainbinary
  parent: microsoftml_scikit.internal.entrypoints.localdeepsvm_trainbinary
  uid: microsoftml_scikit.internal.entrypoints.localdeepsvm_trainbinary.localdeepsvm_trainbinary
