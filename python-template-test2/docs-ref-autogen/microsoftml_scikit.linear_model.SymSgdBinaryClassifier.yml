### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: microsoftml_scikit.linear_model.SymSgdBinaryClassifier
  fullName: microsoftml_scikit.linear_model.SymSgdBinaryClassifier
  inheritance:
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: microsoftml_scikit.internal.core.base_pipeline_item.BasePipelineItem
    - inheritance:
      - inheritance:
        - inheritance:
          - type: builtins.object
          type: microsoftml_scikit.internal.core.base_pipeline_item.BaseSignature
        type: microsoftml_scikit.internal.core.base_pipeline_item.DefaultSignature
      type: microsoftml_scikit.internal.core.base_pipeline_item.DefaultSignatureWithRoles
    type: microsoftml_scikit.internal.core.linear_model.symsgdbinaryclassifier.SymSgdBinaryClassifier
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: sklearn.base.BaseEstimator
    - inheritance:
      - type: builtins.object
      type: microsoftml_scikit.internal.core.base_pipeline_item.BasePipelineItem
    type: microsoftml_scikit.base_predictor.BasePredictor
  - inheritance:
    - type: builtins.object
    type: sklearn.base.ClassifierMixin
  langs:
  - python
  module: microsoftml_scikit.linear_model
  name: SymSgdBinaryClassifier
  source:
    id: SymSgdBinaryClassifier
    path: microsoftml_scikit\linear_model\symsgdbinaryclassifier.py
    remote:
      branch: master
      path: microsoftml_scikit\linear_model\symsgdbinaryclassifier.py
      repo: https://msdata.visualstudio.com/DefaultCollection/AlgorithmsAndDataScience/_git/PyTlc
    startLine: 20
  summary: "**Description**\n   Train a symbolic SGD.\n"
  syntax:
    content: SymSgdBinaryClassifier(normalize='Auto', caching='Auto', number_of_iterations=50,
      learning_rate=None, l2_regularization=0.0, number_of_threads=None, tol=0.0001,
      update_frequency=None, memory_size=1024, shuffle=True, positive_instance_weight=1.0,
      feature=None, label=None, columns=None, **params)
    parameters:
    - description: 'see *l-pipeline-syntax*.

        '
      id: feature
    - description: 'see *l-pipeline-syntax*.

        '
      id: label
    - description: 'see *l-pipeline-syntax*.

        '
      id: columns
    - description: 'If `Auto`, the choice to normalize depends on the preference declared
        by the algorithm. This is the

        default choice. If `No`, no normalization is performed. If `Yes`, normalization
        always performed. If `Warn`,

        if normalization is needed by the algorithm, a warning message is displayed
        but normalization is not performed. If

        normalization is performed, a `MaxMin` normalizer is used. This normalizer
        preserves sparsity by mapping zero to

        zero.

        '
      id: normalize
    - description: 'Whether learner should cache input training data.

        '
      id: caching
    - description: 'Number of passes over the data.

        '
      id: number_of_iterations
    - description: 'Learning rate.

        '
      id: learning_rate
    - description: 'L2 regularization.

        '
      id: l2_regularization
    - description: 'Degree of lock-free parallelism. Defaults to automatic depending
        on data sparseness.

        Determinism not guaranteed.

        '
      id: number_of_threads
    - description: 'Tolerance for difference in average loss in consecutive passes.

        '
      id: tol
    - description: 'The number of iterations each thread learns a local model until
        combining it with the global

        model. Low value means more updated global model and high value means less
        cache traffic.

        '
      id: update_frequency
    - description: 'Memory size for L-BFGS. Lower=faster, less accurate. The technique
        used for optimization here is

        L-BFGS, which uses only a limited amount of memory to compute the next step
        direction. This parameter indicates the

        number of past positions and gradients to store for the computation of the
        next step. Must be greater than or equal

        to `1`.

        '
      id: memory_size
    - description: 'Shuffle data?.

        '
      id: shuffle
    - description: 'Apply weight to the positive class, for imbalanced data.

        '
      id: positive_instance_weight
    - description: 'Additional arguments sent to compute engine.

        '
      id: params
  type: class
  uid: microsoftml_scikit.linear_model.SymSgdBinaryClassifier
references: []
