### YamlMime:UniversalReference
api_name: []
items:
- children:
  - microsoftml_scikit.NormalizeSupervisedBin.fit
  - microsoftml_scikit.NormalizeSupervisedBin.fit_transform
  - microsoftml_scikit.NormalizeSupervisedBin.get_params
  - microsoftml_scikit.NormalizeSupervisedBin.set_params
  - microsoftml_scikit.NormalizeSupervisedBin.transform
  class: microsoftml_scikit.NormalizeSupervisedBin
  fullName: microsoftml_scikit.NormalizeSupervisedBin
  inheritance:
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: microsoftml_scikit.modules.base.base_pipeline_item.BasePipelineItem
    type: microsoftml_scikit.modules.core.preprocessing.normalizesupervisedbin.NormalizeSupervisedBin
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: sklearn.base.BaseEstimator
    - inheritance:
      - type: builtins.object
      type: microsoftml_scikit.modules.base.base_pipeline_item.BasePipelineItem
    type: microsoftml_scikit.modules.base.base_transform.BaseTransform
  - inheritance:
    - type: builtins.object
    type: sklearn.base.TransformerMixin
  langs:
  - python
  module: microsoftml_scikit
  name: NormalizeSupervisedBin
  source:
    id: NormalizeSupervisedBin
    path: microsoftml_scikit\modules\preprocessing\normalizesupervisedbin.py
    remote:
      branch: master
      path: microsoftml_scikit\modules\preprocessing\normalizesupervisedbin.py
      repo: https://msdata.visualstudio.com/DefaultCollection/AlgorithmsAndDataScience/_git/PyTlc
    startLine: 20
  summary: '







    as *input*, the original column values will be overwritten, otherwise new

    columns will be created. The new columns are created in the same order as

    specified in *input*. If the output list is shorter than *input*, only the

    columns specified in output will be generated. If it is longer than *input*,

    then there is no corresponding column in *input* for the additional columns

    and they will not be generated.












    '
  syntax:
    content: 'NormalizeSupervisedBin(input: list = None, output: list = None, label_column:
      str = None, min_bin_size: numbers.Real = 10, num_bins: numbers.Real = 1024,
      fix_zero: bool = True, max_training_examples: numbers.Real = 1000000000, **params)'
    parameters:
    - description: 'Label column for supervised binning.

        '
      id: label_column
    - description: 'Minimum number of examples per bin.

        '
      id: min_bin_size
    - description: 'Max number of bins, power of 2 recommended.

        '
      id: num_bins
    - description: 'Whether to map zero to zero, preserving sparsity.

        '
      id: fix_zero
    - description: 'Max number of examples used to train the normalizer.

        '
      id: max_training_examples
    - description: 'Additional arguments sent to compute engine.

        '
      id: params
  type: class
  uid: microsoftml_scikit.NormalizeSupervisedBin
- class: microsoftml_scikit.NormalizeSupervisedBin
  fullName: microsoftml_scikit.NormalizeSupervisedBin.fit
  langs:
  - python
  module: microsoftml_scikit
  name: fit
  source:
    id: fit
    path: microsoftml_scikit\utils\utils.py
    remote:
      branch: master
      path: microsoftml_scikit\utils\utils.py
      repo: https://msdata.visualstudio.com/DefaultCollection/AlgorithmsAndDataScience/_git/PyTlc
    startLine: 40
  summary: 'Fits the transform.

    Returns self.

    '
  syntax:
    content: fit(X, y=None, **params)
  type: method
  uid: microsoftml_scikit.NormalizeSupervisedBin.fit
- class: microsoftml_scikit.NormalizeSupervisedBin
  fullName: microsoftml_scikit.NormalizeSupervisedBin.fit_transform
  langs:
  - python
  module: microsoftml_scikit
  name: fit_transform
  source:
    id: fit_transform
    path: microsoftml_scikit\utils\utils.py
    remote:
      branch: master
      path: microsoftml_scikit\utils\utils.py
      repo: https://msdata.visualstudio.com/DefaultCollection/AlgorithmsAndDataScience/_git/PyTlc
    startLine: 27
  summary: 'Fits the transform if needed and applies it to data.

    Returns transformed data.

    '
  syntax:
    content: fit_transform(X, y=None, **params)
  type: method
  uid: microsoftml_scikit.NormalizeSupervisedBin.fit_transform
- class: microsoftml_scikit.NormalizeSupervisedBin
  fullName: microsoftml_scikit.NormalizeSupervisedBin.get_params
  langs:
  - python
  module: microsoftml_scikit
  name: get_params
  source:
    id: get_params
    path: sklearn\base.py
    remote:
      branch: master
      path: sklearn\base.py
      repo: https://msdata.visualstudio.com/DefaultCollection/AlgorithmsAndDataScience/_git/PyTlc
    startLine: 213
  summary: 'Get parameters for this estimator.

    '
  syntax:
    content: get_params(deep=True)
    parameters:
    - defaultValue: 'True'
      description: 'If True, will return the parameters for this estimator and

        contained subobjects that are estimators.

        '
      id: deep
      type:
      - boolean, optional
    return:
      description: '**params** -- Parameter names mapped to their values.

        '
      type:
      - mapping of string to any
  type: method
  uid: microsoftml_scikit.NormalizeSupervisedBin.get_params
- class: microsoftml_scikit.NormalizeSupervisedBin
  fullName: microsoftml_scikit.NormalizeSupervisedBin.set_params
  langs:
  - python
  module: microsoftml_scikit
  name: set_params
  source:
    id: set_params
    path: sklearn\base.py
    remote:
      branch: master
      path: sklearn\base.py
      repo: https://msdata.visualstudio.com/DefaultCollection/AlgorithmsAndDataScience/_git/PyTlc
    startLine: 250
  summary: 'Set the parameters of this estimator.


    The method works on simple estimators as well as on nested objects

    (such as pipelines). The latter have parameters of the form

    `<component>__<parameter>` so that it''s possible to update each

    component of a nested object.

    '
  syntax:
    content: set_params(**params)
    parameters:
    - id: self
    return:
      type:
      - self
  type: method
  uid: microsoftml_scikit.NormalizeSupervisedBin.set_params
- class: microsoftml_scikit.NormalizeSupervisedBin
  fullName: microsoftml_scikit.NormalizeSupervisedBin.transform
  langs:
  - python
  module: microsoftml_scikit
  name: transform
  source:
    id: transform
    path: microsoftml_scikit\utils\utils.py
    remote:
      branch: master
      path: microsoftml_scikit\utils\utils.py
      repo: https://msdata.visualstudio.com/DefaultCollection/AlgorithmsAndDataScience/_git/PyTlc
    startLine: 53
  summary: 'Applies transform to data.

    Returns transformed data.

    '
  syntax:
    content: transform(X, **params)
  type: method
  uid: microsoftml_scikit.NormalizeSupervisedBin.transform
references:
- fullName: microsoftml_scikit.NormalizeSupervisedBin.fit
  isExternal: false
  name: fit
  parent: microsoftml_scikit.NormalizeSupervisedBin
  uid: microsoftml_scikit.NormalizeSupervisedBin.fit
- fullName: microsoftml_scikit.NormalizeSupervisedBin.fit_transform
  isExternal: false
  name: fit_transform
  parent: microsoftml_scikit.NormalizeSupervisedBin
  uid: microsoftml_scikit.NormalizeSupervisedBin.fit_transform
- fullName: microsoftml_scikit.NormalizeSupervisedBin.get_params
  isExternal: false
  name: get_params
  parent: microsoftml_scikit.NormalizeSupervisedBin
  uid: microsoftml_scikit.NormalizeSupervisedBin.get_params
- fullName: microsoftml_scikit.NormalizeSupervisedBin.set_params
  isExternal: false
  name: set_params
  parent: microsoftml_scikit.NormalizeSupervisedBin
  uid: microsoftml_scikit.NormalizeSupervisedBin.set_params
- fullName: microsoftml_scikit.NormalizeSupervisedBin.transform
  isExternal: false
  name: transform
  parent: microsoftml_scikit.NormalizeSupervisedBin
  uid: microsoftml_scikit.NormalizeSupervisedBin.transform
- fullName: boolean, optional
  name: boolean, optional
  spec.python:
  - fullName: boolean
    name: boolean
    uid: boolean
  - fullName: ', '
    name: ', '
  - fullName: optional
    name: optional
    uid: optional
  uid: boolean, optional
